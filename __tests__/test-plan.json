{
  "format_version": "0.1",
  "terraform_version": "0.12.26",
  "variables": {
    "image_tag": {
      "value": "new_timestamp"
    }
  },
  "planned_values": {
    "outputs": {
      "codedeploy_app_name": {
        "sensitive": false,
        "value": "fake_app-dev-codedeploy"
      },
      "codedeploy_appspec_json_file": {
        "sensitive": false,
        "value": "/home/runner/work/fake_app/fake_app/terraform-iac/dev/app/appspec.json"
      },
      "codedeploy_deployment_group_name": {
        "sensitive": false,
        "value": "fake_app-dev-deployment-group"
      }
    },
    "*******_module": {
      "child_modules": [
        {
          "resources": [
            {
              "address": "module.app.aws_security_group_rule.db_access",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "db_access",
              "provider_name": "aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "",
                "from_port": 3306,
                "id": "sgrule-012341234",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-0fake1d",
                "self": false,
                "source_security_group_id": "sg-0fake1d",
                "to_port": 3306,
                "type": "ingress"
              }
            }
          ],
          "address": "module.app",
          "child_modules": [
            {
              "resources": [
                {
                  "address": "module.app.module.database.aws_db_instance.database",
                  "mode": "managed",
                  "type": "aws_db_instance",
                  "name": "database",
                  "provider_name": "aws",
                  "schema_version": 1,
                  "values": {
                    "address": "fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com",
                    "allocated_storage": 32,
                    "allow_major_version_upgrade": null,
                    "apply_immediately": null,
                    "arn": "arn:aws:rds:us-west-2:***:db:fake_app-dev-db",
                    "auto_minor_version_upgrade": true,
                    "availability_zone": "us-west-2b",
                    "backup_retention_period": 7,
                    "backup_window": "07:01-07:31",
                    "ca_cert_identifier": "rds-ca-2019",
                    "character_set_name": null,
                    "copy_tags_to_snapshot": true,
                    "db_subnet_group_name": "oit-oregon-dev-db-subnet-group",
                    "delete_automated_backups": true,
                    "deletion_protection": true,
                    "domain": "",
                    "domain_iam_role_name": "",
                    "enabled_cloudwatch_logs_exports": [
                      "error",
                      "general",
                      "slowquery"
                    ],
                    "endpoint": "fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com:3306",
                    "engine": "mysql",
                    "engine_version": "8.0.11",
                    "final_snapshot_identifier": "fake_app-dev-db-final-snapshot",
                    "hosted_zone_id": "ZFAKE1D",
                    "iam_database_authentication_enabled": false,
                    "id": "fake_app-dev-db",
                    "identifier": "fake_app-dev-db",
                    "identifier_prefix": null,
                    "instance_class": "db.t2.small",
                    "iops": 0,
                    "kms_key_id": "arn:aws:kms:us-west-2:***:key/cfake1d",
                    "license_model": "general-public-license",
                    "maintenance_window": "thu:11:33-thu:12:03",
                    "max_allocated_storage": 0,
                    "monitoring_interval": 0,
                    "monitoring_role_arn": "",
                    "multi_az": false,
                    "name": "deleteme2dev",
                    "option_group_name": "default:mysql-8-0",
                    "parameter_group_name": "default.mysql8.0",
                    "password": "*******",
                    "performance_insights_enabled": false,
                    "performance_insights_kms_key_id": "",
                    "performance_insights_retention_period": 0,
                    "port": 3306,
                    "publicly_accessible": false,
                    "replicas": [],
                    "replicate_source_db": "",
                    "resource_id": "db-FAKE1D",
                    "s3_import": [],
                    "security_group_names": [],
                    "skip_final_snapshot": true,
                    "snapshot_identifier": null,
                    "status": "available",
                    "storage_encrypted": true,
                    "storage_type": "gp2",
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "timeouts": null,
                    "timezone": "",
                    "username": "*******",
                    "vpc_security_group_ids": [
                      "sg-0fake1d"
                    ]
                  }
                },
                {
                  "address": "module.app.module.database.aws_security_group.db_security_group",
                  "mode": "managed",
                  "type": "aws_security_group",
                  "name": "db_security_group",
                  "provider_name": "aws",
                  "schema_version": 1,
                  "values": {
                    "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
                    "description": "Security group for fake_app-dev-db RDS instance",
                    "egress": [],
                    "id": "sg-0fake1d",
                    "ingress": [
                      {
                        "cidr_blocks": [],
                        "description": "",
                        "from_port": 3306,
                        "ipv6_cidr_blocks": [],
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_groups": [
                          "sg-0fake1d"
                        ],
                        "self": false,
                        "to_port": 3306
                      }
                    ],
                    "name": "fake_app-dev-db-db_sg",
                    "name_prefix": null,
                    "owner_id": "***",
                    "revoke_rules_on_delete": false,
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "timeouts": null,
                    "vpc_id": "vpc-0fake1d"
                  }
                },
                {
                  "address": "module.app.module.database.aws_ssm_parameter.master_password",
                  "mode": "managed",
                  "type": "aws_ssm_parameter",
                  "name": "master_password",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "allowed_pattern": "",
                    "arn": "arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password",
                    "description": "fake_app-dev-db Database master password",
                    "id": "/fake_app-dev-db/master_password",
                    "key_id": "alias/aws/ssm",
                    "name": "/fake_app-dev-db/master_password",
                    "overwrite": null,
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "tier": "Standard",
                    "type": "SecureString",
                    "value": "*******",
                    "version": 1
                  }
                },
                {
                  "address": "module.app.module.database.aws_ssm_parameter.master_username",
                  "mode": "managed",
                  "type": "aws_ssm_parameter",
                  "name": "master_username",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "allowed_pattern": "",
                    "arn": "arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username",
                    "description": "fake_app-dev-db Database master username",
                    "id": "/fake_app-dev-db/master_username",
                    "key_id": "",
                    "name": "/fake_app-dev-db/master_username",
                    "overwrite": null,
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "tier": "Standard",
                    "type": "String",
                    "value": "*******",
                    "version": 1
                  }
                },
                {
                  "address": "module.app.module.database.random_password.default[0]",
                  "mode": "managed",
                  "type": "random_password",
                  "name": "default",
                  "index": 0,
                  "provider_name": "random",
                  "schema_version": 0,
                  "values": {
                    "id": "none",
                    "keepers": {
                      "recreate_password": "false"
                    },
                    "length": 32,
                    "lower": true,
                    "min_lower": 0,
                    "min_numeric": 0,
                    "min_special": 0,
                    "min_upper": 0,
                    "number": true,
                    "override_special": null,
                    "result": "*******",
                    "special": false,
                    "upper": true
                  }
                }
              ],
              "address": "module.app.module.database"
            },
            {
              "resources": [
                {
                  "address": "module.app.module.fargate.aws_alb.alb",
                  "mode": "managed",
                  "type": "aws_alb",
                  "name": "alb",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "access_logs": [
                      {
                        "bucket": "",
                        "enabled": false,
                        "prefix": ""
                      }
                    ],
                    "arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
                    "arn_suffix": "app/fake_app-dev-alb/fake1d",
                    "dns_name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
                    "drop_invalid_header_fields": false,
                    "enable_cross_zone_load_balancing": null,
                    "enable_deletion_protection": false,
                    "enable_http2": true,
                    "id": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
                    "idle_timeout": 60,
                    "internal": false,
                    "ip_address_type": "ipv4",
                    "load_balancer_type": "application",
                    "name": "fake_app-dev-alb",
                    "name_prefix": null,
                    "security_groups": [
                      "sg-0fake1d"
                    ],
                    "subnet_mapping": [
                      {
                        "allocation_id": "",
                        "subnet_id": "subnet-0fake1d"
                      },
                      {
                        "allocation_id": "",
                        "subnet_id": "subnet-0fake1d"
                      }
                    ],
                    "subnets": [
                      "subnet-0fake1d",
                      "subnet-0fake1d"
                    ],
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "timeouts": null,
                    "vpc_id": "vpc-0fake1d",
                    "zone_id": "FAKE123"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_alb_listener.http_to_https",
                  "mode": "managed",
                  "type": "aws_alb_listener",
                  "name": "http_to_https",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
                    "certificate_arn": null,
                    "default_action": [
                      {
                        "authenticate_cognito": [],
                        "authenticate_oidc": [],
                        "fixed_response": [],
                        "forward": [],
                        "order": 1,
                        "redirect": [
                          {
                            "host": "#{host}",
                            "path": "/#{path}",
                            "port": "443",
                            "protocol": "HTTPS",
                            "query": "#{query}",
                            "status_code": "HTTP_301"
                          }
                        ],
                        "target_group_arn": "",
                        "type": "redirect"
                      }
                    ],
                    "id": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
                    "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
                    "port": 80,
                    "protocol": "HTTP",
                    "ssl_policy": "",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_alb_listener.https",
                  "mode": "managed",
                  "type": "aws_alb_listener",
                  "name": "https",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
                    "certificate_arn": "arn:aws:acm:us-west-2:***:certificate/0fake1d",
                    "default_action": [
                      {
                        "authenticate_cognito": [],
                        "authenticate_oidc": [],
                        "fixed_response": [],
                        "forward": [],
                        "order": 1,
                        "redirect": [],
                        "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
                        "type": "forward"
                      }
                    ],
                    "id": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
                    "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
                    "port": 443,
                    "protocol": "HTTPS",
                    "ssl_policy": "ELBSecurityPolicy-2016-08",
                    "timeouts": null
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_alb_target_group.blue",
                  "mode": "managed",
                  "type": "aws_alb_target_group",
                  "name": "blue",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
                    "arn_suffix": "targetgroup/fake_app-dev-tgb/0fake1d",
                    "deregistration_delay": 60,
                    "health_check": [
                      {
                        "enabled": true,
                        "healthy_threshold": 3,
                        "interval": 30,
                        "matcher": "200",
                        "path": "/health",
                        "port": "traffic-port",
                        "protocol": "HTTP",
                        "timeout": 5,
                        "unhealthy_threshold": 3
                      }
                    ],
                    "id": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
                    "lambda_multi_value_headers_enabled": false,
                    "load_balancing_algorithm_type": "least_outstanding_requests",
                    "name": "fake_app-dev-tgb",
                    "name_prefix": null,
                    "port": 8080,
                    "protocol": "HTTP",
                    "proxy_protocol_v2": false,
                    "slow_start": 0,
                    "stickiness": [
                      {
                        "cookie_duration": 86400,
                        "enabled": false,
                        "type": "lb_cookie"
                      }
                    ],
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "target_type": "ip",
                    "vpc_id": "vpc-0fake1d"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_alb_target_group.green",
                  "mode": "managed",
                  "type": "aws_alb_target_group",
                  "name": "green",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgg/0fake1d",
                    "arn_suffix": "targetgroup/fake_app-dev-tgg/0fake1d",
                    "deregistration_delay": 60,
                    "health_check": [
                      {
                        "enabled": true,
                        "healthy_threshold": 3,
                        "interval": 30,
                        "matcher": "200",
                        "path": "/health",
                        "port": "traffic-port",
                        "protocol": "HTTP",
                        "timeout": 5,
                        "unhealthy_threshold": 3
                      }
                    ],
                    "id": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgg/0fake1d",
                    "lambda_multi_value_headers_enabled": false,
                    "load_balancing_algorithm_type": "least_outstanding_requests",
                    "name": "fake_app-dev-tgg",
                    "name_prefix": null,
                    "port": 8080,
                    "protocol": "HTTP",
                    "proxy_protocol_v2": false,
                    "slow_start": 0,
                    "stickiness": [
                      {
                        "cookie_duration": 86400,
                        "enabled": false,
                        "type": "lb_cookie"
                      }
                    ],
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "target_type": "ip",
                    "vpc_id": "vpc-0fake1d"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_cloudwatch_log_group.container_log_group",
                  "mode": "managed",
                  "type": "aws_cloudwatch_log_group",
                  "name": "container_log_group",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:logs:us-west-2:***:log-group:fargate/fake_app-dev:*",
                    "id": "fargate/fake_app-dev",
                    "kms_key_id": "",
                    "name": "fargate/fake_app-dev",
                    "name_prefix": null,
                    "retention_in_days": 7,
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    }
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_codedeploy_app.app",
                  "mode": "managed",
                  "type": "aws_codedeploy_app",
                  "name": "app",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "compute_platform": "ECS",
                    "id": "fake1d:fake_app-dev-codedeploy",
                    "name": "fake_app-dev-codedeploy",
                    "unique_id": null
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_codedeploy_deployment_group.deploymentgroup",
                  "mode": "managed",
                  "type": "aws_codedeploy_deployment_group",
                  "name": "deploymentgroup",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "alarm_configuration": [],
                    "app_name": "fake_app-dev-codedeploy",
                    "auto_rollback_configuration": [
                      {
                        "enabled": true,
                        "events": [
                          "DEPLOYMENT_FAILURE"
                        ]
                      }
                    ],
                    "autoscaling_groups": [],
                    "blue_green_deployment_config": [
                      {
                        "deployment_ready_option": [
                          {
                            "action_on_timeout": "CONTINUE_DEPLOYMENT",
                            "wait_time_in_minutes": 0
                          }
                        ],
                        "green_fleet_provisioning_option": [],
                        "terminate_blue_instances_on_deployment_success": [
                          {
                            "action": "TERMINATE",
                            "termination_wait_time_in_minutes": 1
                          }
                        ]
                      }
                    ],
                    "deployment_config_name": "CodeDeployDefault.ECSAllAtOnce",
                    "deployment_group_name": "fake_app-dev-deployment-group",
                    "deployment_style": [
                      {
                        "deployment_option": "WITH_TRAFFIC_CONTROL",
                        "deployment_type": "BLUE_GREEN"
                      }
                    ],
                    "ec2_tag_filter": [],
                    "ec2_tag_set": [],
                    "ecs_service": [
                      {
                        "cluster_name": "fake_app-dev",
                        "service_name": "fake_app-dev"
                      }
                    ],
                    "id": "fake1d",
                    "load_balancer_info": [
                      {
                        "elb_info": [],
                        "target_group_info": [],
                        "target_group_pair_info": [
                          {
                            "prod_traffic_route": [
                              {
                                "listener_arns": [
                                  "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d"
                                ]
                              }
                            ],
                            "target_group": [
                              {
                                "name": "fake_app-dev-tgb"
                              },
                              {
                                "name": "fake_app-dev-tgg"
                              }
                            ],
                            "test_traffic_route": [
                              {
                                "listener_arns": null
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "on_premises_instance_tag_filter": [],
                    "service_role_arn": "arn:aws:iam::***:role/PowerBuilder",
                    "trigger_configuration": []
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_ecs_cluster.cluster",
                  "mode": "managed",
                  "type": "aws_ecs_cluster",
                  "name": "cluster",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
                    "capacity_providers": [],
                    "default_capacity_provider_strategy": [],
                    "id": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
                    "name": "fake_app-dev",
                    "setting": [
                      {
                        "name": "containerInsights",
                        "value": "enabled"
                      }
                    ],
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    }
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_ecs_service.service",
                  "mode": "managed",
                  "type": "aws_ecs_service",
                  "name": "service",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "capacity_provider_strategy": [],
                    "cluster": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
                    "deployment_controller": [
                      {
                        "type": "CODE_DEPLOY"
                      }
                    ],
                    "deployment_maximum_percent": 200,
                    "deployment_minimum_healthy_percent": 100,
                    "desired_count": 1,
                    "enable_ecs_managed_tags": false,
                    "force_new_deployment": null,
                    "health_check_grace_period_seconds": 0,
                    "iam_role": "aws-service-role",
                    "id": "arn:aws:ecs:us-west-2:***:service/fake_app-dev/fake_app-dev",
                    "launch_type": "FARGATE",
                    "load_balancer": [
                      {
                        "container_name": "main",
                        "container_port": 8080,
                        "elb_name": "",
                        "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d"
                      }
                    ],
                    "name": "fake_app-dev",
                    "network_configuration": [
                      {
                        "assign_public_ip": true,
                        "security_groups": [
                          "sg-0fake1d"
                        ],
                        "subnets": [
                          "subnet-0fake1d",
                          "subnet-0fake1d"
                        ]
                      }
                    ],
                    "ordered_placement_strategy": [],
                    "placement_constraints": [],
                    "placement_strategy": [],
                    "platform_version": "1.4.0",
                    "propagate_tags": "NONE",
                    "scheduling_strategy": "REPLICA",
                    "service_registries": [],
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "task_definition": "arn:aws:ecs:us-west-2:***:task-definition/fake_app-dev-def:5"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_ecs_task_definition.task_def",
                  "mode": "managed",
                  "type": "aws_ecs_task_definition",
                  "name": "task_def",
                  "provider_name": "aws",
                  "schema_version": 1,
                  "values": {
                    "container_definitions": "[{\"environment\":[{\"name\":\"ENV\",\"value\":\"dev\"},{\"name\":\"db_url\",\"value\":\"jdbc:mysql://fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com:3306/deleteme2dev\"}],\"essential\":true,\"image\":\"***.dkr.ecr.us-west-2.amazonaws.com/fake_app-dev:new_timestamp\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"fargate/fake_app-dev\",\"awslogs-region\":\"us-west-2\",\"awslogs-stream-prefix\":\"fake_app-dev\"}},\"mountPoints\":[],\"name\":\"main\",\"portMappings\":[{\"containerPort\":8080,\"hostPort\":8080,\"protocol\":\"tcp\"}],\"privileged\":false,\"secrets\":[{\"name\":\"db_password\",\"valueFrom\":\"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password\"},{\"name\":\"db_username\",\"valueFrom\":\"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username\"}],\"volumesFrom\":[]}]",
                    "cpu": "256",
                    "execution_role_arn": "arn:aws:iam::***:role/fake_app-dev-taskExecutionRole",
                    "family": "fake_app-dev-def",
                    "inference_accelerator": [],
                    "ipc_mode": null,
                    "memory": "512",
                    "network_mode": "awsvpc",
                    "pid_mode": null,
                    "placement_constraints": [],
                    "proxy_configuration": [],
                    "requires_compatibilities": [
                      "FARGATE"
                    ],
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "task_role_arn": "arn:aws:iam::***:role/fake_app-dev-taskRole",
                    "volume": []
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_iam_policy.secrets_access[0]",
                  "mode": "managed",
                  "type": "aws_iam_policy",
                  "name": "secrets_access",
                  "index": 0,
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
                    "description": "",
                    "id": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
                    "name": "fake_app-dev_secrets_access",
                    "name_prefix": null,
                    "path": "/",
                    "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssm:GetParemetersByPath\",\n        \"ssm:GetParameters\",\n        \"ssm:GetParameter\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username\",\n        \"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password\"\n      ]\n    }\n  ]\n}"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_iam_role.task_execution_role",
                  "mode": "managed",
                  "type": "aws_iam_role",
                  "name": "task_execution_role",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:iam::***:role/fake_app-dev-taskExecutionRole",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2020-06-17T14:59:29Z",
                    "description": "",
                    "force_detach_policies": false,
                    "id": "fake_app-dev-taskExecutionRole",
                    "max_session_duration": 3600,
                    "name": "fake_app-dev-taskExecutionRole",
                    "name_prefix": null,
                    "path": "/",
                    "permissions_boundary": "arn:aws:iam::***:policy/iamRolePermissionBoundary",
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "unique_id": "AROAQKWMX5RQFY26MWWWF"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_iam_role.task_role",
                  "mode": "managed",
                  "type": "aws_iam_role",
                  "name": "task_role",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:iam::***:role/fake_app-dev-taskRole",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2020-06-17T14:59:29Z",
                    "description": "",
                    "force_detach_policies": false,
                    "id": "fake_app-dev-taskRole",
                    "max_session_duration": 3600,
                    "name": "fake_app-dev-taskRole",
                    "name_prefix": null,
                    "path": "/",
                    "permissions_boundary": "arn:aws:iam::***:policy/iamRolePermissionBoundary",
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "unique_id": "FAKE1D"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_iam_role_policy_attachment.secret_task_policy_attach[0]",
                  "mode": "managed",
                  "type": "aws_iam_role_policy_attachment",
                  "name": "secret_task_policy_attach",
                  "index": 0,
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "id": "fake_app-dev-taskRole-0FAKE1D",
                    "policy_arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
                    "role": "fake_app-dev-taskRole"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_iam_role_policy_attachment.secrets_policy_attach[0]",
                  "mode": "managed",
                  "type": "aws_iam_role_policy_attachment",
                  "name": "secrets_policy_attach",
                  "index": 0,
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "id": "fake_app-dev-taskExecutionRole-0FAKE1D",
                    "policy_arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
                    "role": "fake_app-dev-taskExecutionRole"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_iam_role_policy_attachment.task_execution_policy_attach",
                  "mode": "managed",
                  "type": "aws_iam_role_policy_attachment",
                  "name": "task_execution_policy_attach",
                  "provider_name": "aws",
                  "schema_version": 0,
                  "values": {
                    "id": "fake_app-dev-taskExecutionRole-0FAKE1D",
                    "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
                    "role": "fake_app-dev-taskExecutionRole"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_route53_record.a_record",
                  "mode": "managed",
                  "type": "aws_route53_record",
                  "name": "a_record",
                  "provider_name": "aws",
                  "schema_version": 2,
                  "values": {
                    "alias": [
                      {
                        "evaluate_target_health": true,
                        "name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
                        "zone_id": "FAKE123"
                      }
                    ],
                    "allow_overwrite": null,
                    "failover_routing_policy": [],
                    "fqdn": "fake_app-dev.fake_domain.amazon.byu.edu",
                    "geolocation_routing_policy": [],
                    "health_check_id": "",
                    "id": "Z0FAKE1D_fake_app-dev.fake_domain.amazon.byu.edu._A",
                    "latency_routing_policy": [],
                    "multivalue_answer_routing_policy": null,
                    "name": "fake_app-dev.fake_domain.amazon.byu.edu",
                    "records": [],
                    "set_identifier": "",
                    "ttl": 0,
                    "type": "A",
                    "weighted_routing_policy": [],
                    "zone_id": "Z0FAKE1D"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_route53_record.aaaa_record",
                  "mode": "managed",
                  "type": "aws_route53_record",
                  "name": "aaaa_record",
                  "provider_name": "aws",
                  "schema_version": 2,
                  "values": {
                    "alias": [
                      {
                        "evaluate_target_health": true,
                        "name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
                        "zone_id": "FAKE123"
                      }
                    ],
                    "allow_overwrite": null,
                    "failover_routing_policy": [],
                    "fqdn": "fake_app-dev.fake_domain.amazon.byu.edu",
                    "geolocation_routing_policy": [],
                    "health_check_id": "",
                    "id": "Z0FAKE1D_fake_app-dev.fake_domain.amazon.byu.edu._AAAA",
                    "latency_routing_policy": [],
                    "multivalue_answer_routing_policy": null,
                    "name": "fake_app-dev.fake_domain.amazon.byu.edu",
                    "records": [],
                    "set_identifier": "",
                    "ttl": 0,
                    "type": "AAAA",
                    "weighted_routing_policy": [],
                    "zone_id": "Z0FAKE1D"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_security_group.alb-sg",
                  "mode": "managed",
                  "type": "aws_security_group",
                  "name": "alb-sg",
                  "provider_name": "aws",
                  "schema_version": 1,
                  "values": {
                    "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
                    "description": "Controls access to the fake_app-dev-alb",
                    "egress": [
                      {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": "",
                        "from_port": 0,
                        "ipv6_cidr_blocks": [],
                        "prefix_list_ids": [],
                        "protocol": "-1",
                        "security_groups": [],
                        "self": false,
                        "to_port": 0
                      }
                    ],
                    "id": "sg-0fake1d",
                    "ingress": [
                      {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": "",
                        "from_port": 443,
                        "ipv6_cidr_blocks": [],
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_groups": [],
                        "self": false,
                        "to_port": 443
                      },
                      {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": "",
                        "from_port": 80,
                        "ipv6_cidr_blocks": [],
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_groups": [],
                        "self": false,
                        "to_port": 80
                      }
                    ],
                    "name": "fake_app-dev-alb-sg",
                    "name_prefix": null,
                    "owner_id": "***",
                    "revoke_rules_on_delete": false,
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "timeouts": null,
                    "vpc_id": "vpc-0fake1d"
                  }
                },
                {
                  "address": "module.app.module.fargate.aws_security_group.fargate_service_sg",
                  "mode": "managed",
                  "type": "aws_security_group",
                  "name": "fargate_service_sg",
                  "provider_name": "aws",
                  "schema_version": 1,
                  "values": {
                    "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
                    "description": "Controls access to the Fargate Service",
                    "egress": [
                      {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": "",
                        "from_port": 0,
                        "ipv6_cidr_blocks": [],
                        "prefix_list_ids": [],
                        "protocol": "-1",
                        "security_groups": [],
                        "self": false,
                        "to_port": 0
                      }
                    ],
                    "id": "sg-0fake1d",
                    "ingress": [
                      {
                        "cidr_blocks": [],
                        "description": "",
                        "from_port": 0,
                        "ipv6_cidr_blocks": [],
                        "prefix_list_ids": [],
                        "protocol": "tcp",
                        "security_groups": [
                          "sg-0fake1d"
                        ],
                        "self": false,
                        "to_port": 65535
                      }
                    ],
                    "name": "fake_app-dev-fargate-sg",
                    "name_prefix": null,
                    "owner_id": "***",
                    "revoke_rules_on_delete": false,
                    "tags": {
                      "app": "fake_app-dev",
                      "data-sensitivity": "confidential",
                      "repo": "https://github.com/byu-oit/fake_app",
                      "team": "FAKE_TEAM"
                    },
                    "timeouts": null,
                    "vpc_id": "vpc-0fake1d"
                  }
                },
                {
                  "address": "module.app.module.fargate.local_file.appspec_json",
                  "mode": "managed",
                  "type": "local_file",
                  "name": "appspec_json",
                  "provider_name": "local",
                  "schema_version": 0,
                  "values": {
                    "content_base64": null,
                    "directory_permission": "0777",
                    "file_permission": "0777",
                    "filename": "/home/runner/work/fake_app/fake_app/terraform-iac/dev/app/appspec.json",
                    "sensitive_content": null
                  }
                }
              ],
              "address": "module.app.module.fargate"
            }
          ]
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "module.app.aws_security_group_rule.db_access",
      "module_address": "module.app",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "db_access",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "",
          "from_port": 3306,
          "id": "sgrule-012341234",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0fake1d",
          "self": false,
          "source_security_group_id": "sg-0fake1d",
          "to_port": 3306,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "",
          "from_port": 3306,
          "id": "sgrule-012341234",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0fake1d",
          "self": false,
          "source_security_group_id": "sg-0fake1d",
          "to_port": 3306,
          "type": "ingress"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.database.aws_db_instance.database",
      "module_address": "module.app.module.database",
      "mode": "managed",
      "type": "aws_db_instance",
      "name": "database",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "address": "fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com",
          "allocated_storage": 32,
          "allow_major_version_upgrade": null,
          "apply_immediately": null,
          "arn": "arn:aws:rds:us-west-2:***:db:fake_app-dev-db",
          "auto_minor_version_upgrade": true,
          "availability_zone": "us-west-2b",
          "backup_retention_period": 7,
          "backup_window": "07:01-07:31",
          "ca_cert_identifier": "rds-ca-2019",
          "character_set_name": null,
          "copy_tags_to_snapshot": true,
          "db_subnet_group_name": "oit-oregon-dev-db-subnet-group",
          "delete_automated_backups": true,
          "deletion_protection": true,
          "domain": "",
          "domain_iam_role_name": "",
          "enabled_cloudwatch_logs_exports": [
            "error",
            "general",
            "slowquery"
          ],
          "endpoint": "fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com:3306",
          "engine": "mysql",
          "engine_version": "8.0.11",
          "final_snapshot_identifier": "fake_app-dev-db-final-snapshot",
          "hosted_zone_id": "ZFAKE1D",
          "iam_database_authentication_enabled": false,
          "id": "fake_app-dev-db",
          "identifier": "fake_app-dev-db",
          "identifier_prefix": null,
          "instance_class": "db.t2.small",
          "iops": 0,
          "kms_key_id": "arn:aws:kms:us-west-2:***:key/cfake1d",
          "license_model": "general-public-license",
          "maintenance_window": "thu:11:33-thu:12:03",
          "max_allocated_storage": 0,
          "monitoring_interval": 0,
          "monitoring_role_arn": "",
          "multi_az": false,
          "name": "deleteme2dev",
          "option_group_name": "default:mysql-8-0",
          "parameter_group_name": "default.mysql8.0",
          "password": "*******",
          "performance_insights_enabled": false,
          "performance_insights_kms_key_id": "",
          "performance_insights_retention_period": 0,
          "port": 3306,
          "publicly_accessible": false,
          "replicas": [],
          "replicate_source_db": "",
          "resource_id": "db-FAKE1D",
          "s3_import": [],
          "security_group_names": [],
          "skip_final_snapshot": true,
          "snapshot_identifier": null,
          "status": "available",
          "storage_encrypted": true,
          "storage_type": "gp2",
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "timeouts": null,
          "timezone": "",
          "username": "*******",
          "vpc_security_group_ids": [
            "sg-0fake1d"
          ]
        },
        "after": {
          "address": "fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com",
          "allocated_storage": 32,
          "allow_major_version_upgrade": null,
          "apply_immediately": null,
          "arn": "arn:aws:rds:us-west-2:***:db:fake_app-dev-db",
          "auto_minor_version_upgrade": true,
          "availability_zone": "us-west-2b",
          "backup_retention_period": 7,
          "backup_window": "07:01-07:31",
          "ca_cert_identifier": "rds-ca-2019",
          "character_set_name": null,
          "copy_tags_to_snapshot": true,
          "db_subnet_group_name": "oit-oregon-dev-db-subnet-group",
          "delete_automated_backups": true,
          "deletion_protection": true,
          "domain": "",
          "domain_iam_role_name": "",
          "enabled_cloudwatch_logs_exports": [
            "error",
            "general",
            "slowquery"
          ],
          "endpoint": "fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com:3306",
          "engine": "mysql",
          "engine_version": "8.0.11",
          "final_snapshot_identifier": "fake_app-dev-db-final-snapshot",
          "hosted_zone_id": "ZFAKE1D",
          "iam_database_authentication_enabled": false,
          "id": "fake_app-dev-db",
          "identifier": "fake_app-dev-db",
          "identifier_prefix": null,
          "instance_class": "db.t2.small",
          "iops": 0,
          "kms_key_id": "arn:aws:kms:us-west-2:***:key/cfake1d",
          "license_model": "general-public-license",
          "maintenance_window": "thu:11:33-thu:12:03",
          "max_allocated_storage": 0,
          "monitoring_interval": 0,
          "monitoring_role_arn": "",
          "multi_az": false,
          "name": "deleteme2dev",
          "option_group_name": "default:mysql-8-0",
          "parameter_group_name": "default.mysql8.0",
          "password": "*******",
          "performance_insights_enabled": false,
          "performance_insights_kms_key_id": "",
          "performance_insights_retention_period": 0,
          "port": 3306,
          "publicly_accessible": false,
          "replicas": [],
          "replicate_source_db": "",
          "resource_id": "db-FAKE1D",
          "s3_import": [],
          "security_group_names": [],
          "skip_final_snapshot": true,
          "snapshot_identifier": null,
          "status": "available",
          "storage_encrypted": true,
          "storage_type": "gp2",
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "timeouts": null,
          "timezone": "",
          "username": "*******",
          "vpc_security_group_ids": [
            "sg-0fake1d"
          ]
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.database.aws_security_group.db_security_group",
      "module_address": "module.app.module.database",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "db_security_group",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
          "description": "Security group for fake_app-dev-db RDS instance",
          "egress": [],
          "id": "sg-0fake1d",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "",
              "from_port": 3306,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-0fake1d"
              ],
              "self": false,
              "to_port": 3306
            }
          ],
          "name": "fake_app-dev-db-db_sg",
          "name_prefix": null,
          "owner_id": "***",
          "revoke_rules_on_delete": false,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "timeouts": null,
          "vpc_id": "vpc-0fake1d"
        },
        "after": {
          "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
          "description": "Security group for fake_app-dev-db RDS instance",
          "egress": [],
          "id": "sg-0fake1d",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "",
              "from_port": 3306,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-0fake1d"
              ],
              "self": false,
              "to_port": 3306
            }
          ],
          "name": "fake_app-dev-db-db_sg",
          "name_prefix": null,
          "owner_id": "***",
          "revoke_rules_on_delete": false,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "timeouts": null,
          "vpc_id": "vpc-0fake1d"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.database.aws_ssm_parameter.master_password",
      "module_address": "module.app.module.database",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "master_password",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "allowed_pattern": "",
          "arn": "arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password",
          "description": "fake_app-dev-db Database master password",
          "id": "/fake_app-dev-db/master_password",
          "key_id": "alias/aws/ssm",
          "name": "/fake_app-dev-db/master_password",
          "overwrite": null,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "tier": "Standard",
          "type": "SecureString",
          "value": "*******",
          "version": 1
        },
        "after": {
          "allowed_pattern": "",
          "arn": "arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password",
          "description": "fake_app-dev-db Database master password",
          "id": "/fake_app-dev-db/master_password",
          "key_id": "alias/aws/ssm",
          "name": "/fake_app-dev-db/master_password",
          "overwrite": null,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "tier": "Standard",
          "type": "SecureString",
          "value": "*******",
          "version": 1
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.database.aws_ssm_parameter.master_username",
      "module_address": "module.app.module.database",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "master_username",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "allowed_pattern": "",
          "arn": "arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username",
          "description": "fake_app-dev-db Database master username",
          "id": "/fake_app-dev-db/master_username",
          "key_id": "",
          "name": "/fake_app-dev-db/master_username",
          "overwrite": null,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "tier": "Standard",
          "type": "String",
          "value": "*******",
          "version": 1
        },
        "after": {
          "allowed_pattern": "",
          "arn": "arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username",
          "description": "fake_app-dev-db Database master username",
          "id": "/fake_app-dev-db/master_username",
          "key_id": "",
          "name": "/fake_app-dev-db/master_username",
          "overwrite": null,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "tier": "Standard",
          "type": "String",
          "value": "*******",
          "version": 1
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.database.random_password.default[0]",
      "module_address": "module.app.module.database",
      "mode": "managed",
      "type": "random_password",
      "name": "default",
      "index": 0,
      "provider_name": "random",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "none",
          "keepers": {
            "recreate_password": "false"
          },
          "length": 32,
          "lower": true,
          "min_lower": 0,
          "min_numeric": 0,
          "min_special": 0,
          "min_upper": 0,
          "number": true,
          "override_special": null,
          "result": "*******",
          "special": false,
          "upper": true
        },
        "after": {
          "id": "none",
          "keepers": {
            "recreate_password": "false"
          },
          "length": 32,
          "lower": true,
          "min_lower": 0,
          "min_numeric": 0,
          "min_special": 0,
          "min_upper": 0,
          "number": true,
          "override_special": null,
          "result": "*******",
          "special": false,
          "upper": true
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_alb.alb",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_alb",
      "name": "alb",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access_logs": [
            {
              "bucket": "",
              "enabled": false,
              "prefix": ""
            }
          ],
          "arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
          "arn_suffix": "app/fake_app-dev-alb/fake1d",
          "dns_name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
          "drop_invalid_header_fields": false,
          "enable_cross_zone_load_balancing": null,
          "enable_deletion_protection": false,
          "enable_http2": true,
          "id": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
          "idle_timeout": 60,
          "internal": false,
          "ip_address_type": "ipv4",
          "load_balancer_type": "application",
          "name": "fake_app-dev-alb",
          "name_prefix": null,
          "security_groups": [
            "sg-0fake1d"
          ],
          "subnet_mapping": [
            {
              "allocation_id": "",
              "subnet_id": "subnet-0fake1d"
            },
            {
              "allocation_id": "",
              "subnet_id": "subnet-0fake1d"
            }
          ],
          "subnets": [
            "subnet-0fake1d",
            "subnet-0fake1d"
          ],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "timeouts": null,
          "vpc_id": "vpc-0fake1d",
          "zone_id": "FAKE123"
        },
        "after": {
          "access_logs": [
            {
              "bucket": "",
              "enabled": false,
              "prefix": ""
            }
          ],
          "arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
          "arn_suffix": "app/fake_app-dev-alb/fake1d",
          "dns_name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
          "drop_invalid_header_fields": false,
          "enable_cross_zone_load_balancing": null,
          "enable_deletion_protection": false,
          "enable_http2": true,
          "id": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
          "idle_timeout": 60,
          "internal": false,
          "ip_address_type": "ipv4",
          "load_balancer_type": "application",
          "name": "fake_app-dev-alb",
          "name_prefix": null,
          "security_groups": [
            "sg-0fake1d"
          ],
          "subnet_mapping": [
            {
              "allocation_id": "",
              "subnet_id": "subnet-0fake1d"
            },
            {
              "allocation_id": "",
              "subnet_id": "subnet-0fake1d"
            }
          ],
          "subnets": [
            "subnet-0fake1d",
            "subnet-0fake1d"
          ],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "timeouts": null,
          "vpc_id": "vpc-0fake1d",
          "zone_id": "FAKE123"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_alb_listener.http_to_https",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_alb_listener",
      "name": "http_to_https",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
          "certificate_arn": null,
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "order": 1,
              "redirect": [
                {
                  "host": "#{host}",
                  "path": "/#{path}",
                  "port": "443",
                  "protocol": "HTTPS",
                  "query": "#{query}",
                  "status_code": "HTTP_301"
                }
              ],
              "target_group_arn": "",
              "type": "redirect"
            }
          ],
          "id": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
          "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
          "port": 80,
          "protocol": "HTTP",
          "ssl_policy": "",
          "timeouts": null
        },
        "after": {
          "arn": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
          "certificate_arn": null,
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "order": 1,
              "redirect": [
                {
                  "host": "#{host}",
                  "path": "/#{path}",
                  "port": "443",
                  "protocol": "HTTPS",
                  "query": "#{query}",
                  "status_code": "HTTP_301"
                }
              ],
              "target_group_arn": "",
              "type": "redirect"
            }
          ],
          "id": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
          "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
          "port": 80,
          "protocol": "HTTP",
          "ssl_policy": "",
          "timeouts": null
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_alb_listener.https",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_alb_listener",
      "name": "https",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
          "certificate_arn": "arn:aws:acm:us-west-2:***:certificate/0fake1d",
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "order": 1,
              "redirect": [],
              "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
              "type": "forward"
            }
          ],
          "id": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
          "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
          "port": 443,
          "protocol": "HTTPS",
          "ssl_policy": "ELBSecurityPolicy-2016-08",
          "timeouts": null
        },
        "after": {
          "arn": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
          "certificate_arn": "arn:aws:acm:us-west-2:***:certificate/0fake1d",
          "default_action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "forward": [],
              "order": 1,
              "redirect": [],
              "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
              "type": "forward"
            }
          ],
          "id": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
          "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
          "port": 443,
          "protocol": "HTTPS",
          "ssl_policy": "ELBSecurityPolicy-2016-08",
          "timeouts": null
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_alb_target_group.blue",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_alb_target_group",
      "name": "blue",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
          "arn_suffix": "targetgroup/fake_app-dev-tgb/0fake1d",
          "deregistration_delay": 60,
          "health_check": [
            {
              "enabled": true,
              "healthy_threshold": 3,
              "interval": 30,
              "matcher": "200",
              "path": "/health",
              "port": "traffic-port",
              "protocol": "HTTP",
              "timeout": 5,
              "unhealthy_threshold": 3
            }
          ],
          "id": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
          "lambda_multi_value_headers_enabled": false,
          "load_balancing_algorithm_type": "least_outstanding_requests",
          "name": "fake_app-dev-tgb",
          "name_prefix": null,
          "port": 8080,
          "protocol": "HTTP",
          "proxy_protocol_v2": false,
          "slow_start": 0,
          "stickiness": [
            {
              "cookie_duration": 86400,
              "enabled": false,
              "type": "lb_cookie"
            }
          ],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "target_type": "ip",
          "vpc_id": "vpc-0fake1d"
        },
        "after": {
          "arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
          "arn_suffix": "targetgroup/fake_app-dev-tgb/0fake1d",
          "deregistration_delay": 60,
          "health_check": [
            {
              "enabled": true,
              "healthy_threshold": 3,
              "interval": 30,
              "matcher": "200",
              "path": "/health",
              "port": "traffic-port",
              "protocol": "HTTP",
              "timeout": 5,
              "unhealthy_threshold": 3
            }
          ],
          "id": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
          "lambda_multi_value_headers_enabled": false,
          "load_balancing_algorithm_type": "least_outstanding_requests",
          "name": "fake_app-dev-tgb",
          "name_prefix": null,
          "port": 8080,
          "protocol": "HTTP",
          "proxy_protocol_v2": false,
          "slow_start": 0,
          "stickiness": [
            {
              "cookie_duration": 86400,
              "enabled": false,
              "type": "lb_cookie"
            }
          ],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "target_type": "ip",
          "vpc_id": "vpc-0fake1d"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_alb_target_group.green",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_alb_target_group",
      "name": "green",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgg/0fake1d",
          "arn_suffix": "targetgroup/fake_app-dev-tgg/0fake1d",
          "deregistration_delay": 60,
          "health_check": [
            {
              "enabled": true,
              "healthy_threshold": 3,
              "interval": 30,
              "matcher": "200",
              "path": "/health",
              "port": "traffic-port",
              "protocol": "HTTP",
              "timeout": 5,
              "unhealthy_threshold": 3
            }
          ],
          "id": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgg/0fake1d",
          "lambda_multi_value_headers_enabled": false,
          "load_balancing_algorithm_type": "least_outstanding_requests",
          "name": "fake_app-dev-tgg",
          "name_prefix": null,
          "port": 8080,
          "protocol": "HTTP",
          "proxy_protocol_v2": false,
          "slow_start": 0,
          "stickiness": [
            {
              "cookie_duration": 86400,
              "enabled": false,
              "type": "lb_cookie"
            }
          ],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "target_type": "ip",
          "vpc_id": "vpc-0fake1d"
        },
        "after": {
          "arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgg/0fake1d",
          "arn_suffix": "targetgroup/fake_app-dev-tgg/0fake1d",
          "deregistration_delay": 60,
          "health_check": [
            {
              "enabled": true,
              "healthy_threshold": 3,
              "interval": 30,
              "matcher": "200",
              "path": "/health",
              "port": "traffic-port",
              "protocol": "HTTP",
              "timeout": 5,
              "unhealthy_threshold": 3
            }
          ],
          "id": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgg/0fake1d",
          "lambda_multi_value_headers_enabled": false,
          "load_balancing_algorithm_type": "least_outstanding_requests",
          "name": "fake_app-dev-tgg",
          "name_prefix": null,
          "port": 8080,
          "protocol": "HTTP",
          "proxy_protocol_v2": false,
          "slow_start": 0,
          "stickiness": [
            {
              "cookie_duration": 86400,
              "enabled": false,
              "type": "lb_cookie"
            }
          ],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "target_type": "ip",
          "vpc_id": "vpc-0fake1d"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_cloudwatch_log_group.container_log_group",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "container_log_group",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:logs:us-west-2:***:log-group:fargate/fake_app-dev:*",
          "id": "fargate/fake_app-dev",
          "kms_key_id": "",
          "name": "fargate/fake_app-dev",
          "name_prefix": null,
          "retention_in_days": 7,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          }
        },
        "after": {
          "arn": "arn:aws:logs:us-west-2:***:log-group:fargate/fake_app-dev:*",
          "id": "fargate/fake_app-dev",
          "kms_key_id": "",
          "name": "fargate/fake_app-dev",
          "name_prefix": null,
          "retention_in_days": 7,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          }
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_codedeploy_app.app",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_codedeploy_app",
      "name": "app",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "compute_platform": "ECS",
          "id": "fake1d:fake_app-dev-codedeploy",
          "name": "fake_app-dev-codedeploy",
          "unique_id": null
        },
        "after": {
          "compute_platform": "ECS",
          "id": "fake1d:fake_app-dev-codedeploy",
          "name": "fake_app-dev-codedeploy",
          "unique_id": null
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_codedeploy_deployment_group.deploymentgroup",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_codedeploy_deployment_group",
      "name": "deploymentgroup",
      "provider_name": "aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "alarm_configuration": [],
          "app_name": "fake_app-dev-codedeploy",
          "auto_rollback_configuration": [
            {
              "enabled": true,
              "events": [
                "DEPLOYMENT_FAILURE"
              ]
            }
          ],
          "autoscaling_groups": [],
          "blue_green_deployment_config": [
            {
              "deployment_ready_option": [
                {
                  "action_on_timeout": "CONTINUE_DEPLOYMENT",
                  "wait_time_in_minutes": 0
                }
              ],
              "green_fleet_provisioning_option": [],
              "terminate_blue_instances_on_deployment_success": [
                {
                  "action": "TERMINATE",
                  "termination_wait_time_in_minutes": 1
                }
              ]
            }
          ],
          "deployment_config_name": "CodeDeployDefault.ECSAllAtOnce",
          "deployment_group_name": "fake_app-dev-deployment-group",
          "deployment_style": [
            {
              "deployment_option": "WITH_TRAFFIC_CONTROL",
              "deployment_type": "BLUE_GREEN"
            }
          ],
          "ec2_tag_filter": [],
          "ec2_tag_set": [],
          "ecs_service": [
            {
              "cluster_name": "fake_app-dev",
              "service_name": "fake_app-dev"
            }
          ],
          "id": "fake1d",
          "load_balancer_info": [
            {
              "elb_info": [],
              "target_group_info": [],
              "target_group_pair_info": [
                {
                  "prod_traffic_route": [
                    {
                      "listener_arns": [
                        "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d"
                      ]
                    }
                  ],
                  "target_group": [
                    {
                      "name": "fake_app-dev-tgb"
                    },
                    {
                      "name": "fake_app-dev-tgg"
                    }
                  ],
                  "test_traffic_route": []
                }
              ]
            }
          ],
          "on_premises_instance_tag_filter": [],
          "service_role_arn": "arn:aws:iam::***:role/PowerBuilder",
          "trigger_configuration": []
        },
        "after": {
          "alarm_configuration": [],
          "app_name": "fake_app-dev-codedeploy",
          "auto_rollback_configuration": [
            {
              "enabled": true,
              "events": [
                "DEPLOYMENT_FAILURE"
              ]
            }
          ],
          "autoscaling_groups": [],
          "blue_green_deployment_config": [
            {
              "deployment_ready_option": [
                {
                  "action_on_timeout": "CONTINUE_DEPLOYMENT",
                  "wait_time_in_minutes": 0
                }
              ],
              "green_fleet_provisioning_option": [],
              "terminate_blue_instances_on_deployment_success": [
                {
                  "action": "TERMINATE",
                  "termination_wait_time_in_minutes": 1
                }
              ]
            }
          ],
          "deployment_config_name": "CodeDeployDefault.ECSAllAtOnce",
          "deployment_group_name": "fake_app-dev-deployment-group",
          "deployment_style": [
            {
              "deployment_option": "WITH_TRAFFIC_CONTROL",
              "deployment_type": "BLUE_GREEN"
            }
          ],
          "ec2_tag_filter": [],
          "ec2_tag_set": [],
          "ecs_service": [
            {
              "cluster_name": "fake_app-dev",
              "service_name": "fake_app-dev"
            }
          ],
          "id": "fake1d",
          "load_balancer_info": [
            {
              "elb_info": [],
              "target_group_info": [],
              "target_group_pair_info": [
                {
                  "prod_traffic_route": [
                    {
                      "listener_arns": [
                        "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d"
                      ]
                    }
                  ],
                  "target_group": [
                    {
                      "name": "fake_app-dev-tgb"
                    },
                    {
                      "name": "fake_app-dev-tgg"
                    }
                  ],
                  "test_traffic_route": [
                    {
                      "listener_arns": null
                    }
                  ]
                }
              ]
            }
          ],
          "on_premises_instance_tag_filter": [],
          "service_role_arn": "arn:aws:iam::***:role/PowerBuilder",
          "trigger_configuration": []
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_ecs_cluster.cluster",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_ecs_cluster",
      "name": "cluster",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
          "capacity_providers": [],
          "default_capacity_provider_strategy": [],
          "id": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
          "name": "fake_app-dev",
          "setting": [
            {
              "name": "containerInsights",
              "value": "enabled"
            }
          ],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          }
        },
        "after": {
          "arn": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
          "capacity_providers": [],
          "default_capacity_provider_strategy": [],
          "id": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
          "name": "fake_app-dev",
          "setting": [
            {
              "name": "containerInsights",
              "value": "enabled"
            }
          ],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          }
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_ecs_service.service",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_ecs_service",
      "name": "service",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "capacity_provider_strategy": [],
          "cluster": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
          "deployment_controller": [
            {
              "type": "CODE_DEPLOY"
            }
          ],
          "deployment_maximum_percent": 200,
          "deployment_minimum_healthy_percent": 100,
          "desired_count": 1,
          "enable_ecs_managed_tags": false,
          "force_new_deployment": null,
          "health_check_grace_period_seconds": 0,
          "iam_role": "aws-service-role",
          "id": "arn:aws:ecs:us-west-2:***:service/fake_app-dev/fake_app-dev",
          "launch_type": "FARGATE",
          "load_balancer": [
            {
              "container_name": "main",
              "container_port": 8080,
              "elb_name": "",
              "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d"
            }
          ],
          "name": "fake_app-dev",
          "network_configuration": [
            {
              "assign_public_ip": true,
              "security_groups": [
                "sg-0fake1d"
              ],
              "subnets": [
                "subnet-0fake1d",
                "subnet-0fake1d"
              ]
            }
          ],
          "ordered_placement_strategy": [],
          "placement_constraints": [],
          "placement_strategy": [],
          "platform_version": "1.4.0",
          "propagate_tags": "NONE",
          "scheduling_strategy": "REPLICA",
          "service_registries": [],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "task_definition": "arn:aws:ecs:us-west-2:***:task-definition/fake_app-dev-def:5"
        },
        "after": {
          "capacity_provider_strategy": [],
          "cluster": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
          "deployment_controller": [
            {
              "type": "CODE_DEPLOY"
            }
          ],
          "deployment_maximum_percent": 200,
          "deployment_minimum_healthy_percent": 100,
          "desired_count": 1,
          "enable_ecs_managed_tags": false,
          "force_new_deployment": null,
          "health_check_grace_period_seconds": 0,
          "iam_role": "aws-service-role",
          "id": "arn:aws:ecs:us-west-2:***:service/fake_app-dev/fake_app-dev",
          "launch_type": "FARGATE",
          "load_balancer": [
            {
              "container_name": "main",
              "container_port": 8080,
              "elb_name": "",
              "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d"
            }
          ],
          "name": "fake_app-dev",
          "network_configuration": [
            {
              "assign_public_ip": true,
              "security_groups": [
                "sg-0fake1d"
              ],
              "subnets": [
                "subnet-0fake1d",
                "subnet-0fake1d"
              ]
            }
          ],
          "ordered_placement_strategy": [],
          "placement_constraints": [],
          "placement_strategy": [],
          "platform_version": "1.4.0",
          "propagate_tags": "NONE",
          "scheduling_strategy": "REPLICA",
          "service_registries": [],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "task_definition": "arn:aws:ecs:us-west-2:***:task-definition/fake_app-dev-def:5"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_ecs_task_definition.task_def",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_ecs_task_definition",
      "name": "task_def",
      "provider_name": "aws",
      "change": {
        "actions": [
          "delete",
          "create"
        ],
        "before": {
          "arn": "arn:aws:ecs:us-west-2:***:task-definition/fake_app-dev-def:5",
          "container_definitions": "[{\"cpu\":0,\"environment\":[{\"name\":\"ENV\",\"value\":\"dev\"},{\"name\":\"db_url\",\"value\":\"jdbc:mysql://fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com:3306/deleteme2dev\"}],\"essential\":true,\"image\":\"***.dkr.ecr.us-west-2.amazonaws.com/fake_app-dev:2020-06-17_17-43-10\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"fargate/fake_app-dev\",\"awslogs-region\":\"us-west-2\",\"awslogs-stream-prefix\":\"fake_app-dev\"}},\"mountPoints\":[],\"name\":\"main\",\"portMappings\":[{\"containerPort\":8080,\"hostPort\":8080,\"protocol\":\"tcp\"}],\"privileged\":false,\"secrets\":[{\"name\":\"db_password\",\"valueFrom\":\"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password\"},{\"name\":\"db_username\",\"valueFrom\":\"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username\"}],\"volumesFrom\":[]}]",
          "cpu": "256",
          "execution_role_arn": "arn:aws:iam::***:role/fake_app-dev-taskExecutionRole",
          "family": "fake_app-dev-def",
          "id": "fake_app-dev-def",
          "inference_accelerator": [],
          "ipc_mode": "",
          "memory": "512",
          "network_mode": "awsvpc",
          "pid_mode": "",
          "placement_constraints": [],
          "proxy_configuration": [],
          "requires_compatibilities": [
            "FARGATE"
          ],
          "revision": 5,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "task_role_arn": "arn:aws:iam::***:role/fake_app-dev-taskRole",
          "volume": []
        },
        "after": {
          "container_definitions": "[{\"environment\":[{\"name\":\"ENV\",\"value\":\"dev\"},{\"name\":\"db_url\",\"value\":\"jdbc:mysql://fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com:3306/deleteme2dev\"}],\"essential\":true,\"image\":\"***.dkr.ecr.us-west-2.amazonaws.com/fake_app-dev:new_timestamp\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"fargate/fake_app-dev\",\"awslogs-region\":\"us-west-2\",\"awslogs-stream-prefix\":\"fake_app-dev\"}},\"mountPoints\":[],\"name\":\"main\",\"portMappings\":[{\"containerPort\":8080,\"hostPort\":8080,\"protocol\":\"tcp\"}],\"privileged\":false,\"secrets\":[{\"name\":\"db_password\",\"valueFrom\":\"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password\"},{\"name\":\"db_username\",\"valueFrom\":\"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username\"}],\"volumesFrom\":[]}]",
          "cpu": "256",
          "execution_role_arn": "arn:aws:iam::***:role/fake_app-dev-taskExecutionRole",
          "family": "fake_app-dev-def",
          "inference_accelerator": [],
          "ipc_mode": null,
          "memory": "512",
          "network_mode": "awsvpc",
          "pid_mode": null,
          "placement_constraints": [],
          "proxy_configuration": [],
          "requires_compatibilities": [
            "FARGATE"
          ],
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "task_role_arn": "arn:aws:iam::***:role/fake_app-dev-taskRole",
          "volume": []
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "inference_accelerator": [],
          "placement_constraints": [],
          "proxy_configuration": [],
          "requires_compatibilities": [
            false
          ],
          "revision": true,
          "tags": {},
          "volume": []
        }
      }
    },
    {
      "address": "module.app.module.fargate.aws_iam_policy.secrets_access[0]",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "secrets_access",
      "index": 0,
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
          "description": "",
          "id": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
          "name": "fake_app-dev_secrets_access",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssm:GetParemetersByPath\",\n        \"ssm:GetParameters\",\n        \"ssm:GetParameter\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username\",\n        \"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password\"\n      ]\n    }\n  ]\n}"
        },
        "after": {
          "arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
          "description": "",
          "id": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
          "name": "fake_app-dev_secrets_access",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssm:GetParemetersByPath\",\n        \"ssm:GetParameters\",\n        \"ssm:GetParameter\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username\",\n        \"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password\"\n      ]\n    }\n  ]\n}"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_iam_role.task_execution_role",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "task_execution_role",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::***:role/fake_app-dev-taskExecutionRole",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2020-06-17T14:59:29Z",
          "description": "",
          "force_detach_policies": false,
          "id": "fake_app-dev-taskExecutionRole",
          "max_session_duration": 3600,
          "name": "fake_app-dev-taskExecutionRole",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": "arn:aws:iam::***:policy/iamRolePermissionBoundary",
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "unique_id": "AROAQKWMX5RQFY26MWWWF"
        },
        "after": {
          "arn": "arn:aws:iam::***:role/fake_app-dev-taskExecutionRole",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2020-06-17T14:59:29Z",
          "description": "",
          "force_detach_policies": false,
          "id": "fake_app-dev-taskExecutionRole",
          "max_session_duration": 3600,
          "name": "fake_app-dev-taskExecutionRole",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": "arn:aws:iam::***:policy/iamRolePermissionBoundary",
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "unique_id": "AROAQKWMX5RQFY26MWWWF"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_iam_role.task_role",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "task_role",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::***:role/fake_app-dev-taskRole",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2020-06-17T14:59:29Z",
          "description": "",
          "force_detach_policies": false,
          "id": "fake_app-dev-taskRole",
          "max_session_duration": 3600,
          "name": "fake_app-dev-taskRole",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": "arn:aws:iam::***:policy/iamRolePermissionBoundary",
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "unique_id": "FAKE1D"
        },
        "after": {
          "arn": "arn:aws:iam::***:role/fake_app-dev-taskRole",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2020-06-17T14:59:29Z",
          "description": "",
          "force_detach_policies": false,
          "id": "fake_app-dev-taskRole",
          "max_session_duration": 3600,
          "name": "fake_app-dev-taskRole",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": "arn:aws:iam::***:policy/iamRolePermissionBoundary",
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "unique_id": "FAKE1D"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_iam_role_policy_attachment.secret_task_policy_attach[0]",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "secret_task_policy_attach",
      "index": 0,
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "fake_app-dev-taskRole-0FAKE1D",
          "policy_arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
          "role": "fake_app-dev-taskRole"
        },
        "after": {
          "id": "fake_app-dev-taskRole-0FAKE1D",
          "policy_arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
          "role": "fake_app-dev-taskRole"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_iam_role_policy_attachment.secrets_policy_attach[0]",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "secrets_policy_attach",
      "index": 0,
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "fake_app-dev-taskExecutionRole-0FAKE1D",
          "policy_arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
          "role": "fake_app-dev-taskExecutionRole"
        },
        "after": {
          "id": "fake_app-dev-taskExecutionRole-0FAKE1D",
          "policy_arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
          "role": "fake_app-dev-taskExecutionRole"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_iam_role_policy_attachment.task_execution_policy_attach",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "task_execution_policy_attach",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "fake_app-dev-taskExecutionRole-0FAKE1D",
          "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
          "role": "fake_app-dev-taskExecutionRole"
        },
        "after": {
          "id": "fake_app-dev-taskExecutionRole-0FAKE1D",
          "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
          "role": "fake_app-dev-taskExecutionRole"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_route53_record.a_record",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "a_record",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "alias": [
            {
              "evaluate_target_health": true,
              "name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
              "zone_id": "FAKE123"
            }
          ],
          "allow_overwrite": null,
          "failover_routing_policy": [],
          "fqdn": "fake_app-dev.fake_domain.amazon.byu.edu",
          "geolocation_routing_policy": [],
          "health_check_id": "",
          "id": "Z0FAKE1D_fake_app-dev.fake_domain.amazon.byu.edu._A",
          "latency_routing_policy": [],
          "multivalue_answer_routing_policy": null,
          "name": "fake_app-dev.fake_domain.amazon.byu.edu",
          "records": [],
          "set_identifier": "",
          "ttl": 0,
          "type": "A",
          "weighted_routing_policy": [],
          "zone_id": "Z0FAKE1D"
        },
        "after": {
          "alias": [
            {
              "evaluate_target_health": true,
              "name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
              "zone_id": "FAKE123"
            }
          ],
          "allow_overwrite": null,
          "failover_routing_policy": [],
          "fqdn": "fake_app-dev.fake_domain.amazon.byu.edu",
          "geolocation_routing_policy": [],
          "health_check_id": "",
          "id": "Z0FAKE1D_fake_app-dev.fake_domain.amazon.byu.edu._A",
          "latency_routing_policy": [],
          "multivalue_answer_routing_policy": null,
          "name": "fake_app-dev.fake_domain.amazon.byu.edu",
          "records": [],
          "set_identifier": "",
          "ttl": 0,
          "type": "A",
          "weighted_routing_policy": [],
          "zone_id": "Z0FAKE1D"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_route53_record.aaaa_record",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "aaaa_record",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "alias": [
            {
              "evaluate_target_health": true,
              "name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
              "zone_id": "FAKE123"
            }
          ],
          "allow_overwrite": null,
          "failover_routing_policy": [],
          "fqdn": "fake_app-dev.fake_domain.amazon.byu.edu",
          "geolocation_routing_policy": [],
          "health_check_id": "",
          "id": "Z0FAKE1D_fake_app-dev.fake_domain.amazon.byu.edu._AAAA",
          "latency_routing_policy": [],
          "multivalue_answer_routing_policy": null,
          "name": "fake_app-dev.fake_domain.amazon.byu.edu",
          "records": [],
          "set_identifier": "",
          "ttl": 0,
          "type": "AAAA",
          "weighted_routing_policy": [],
          "zone_id": "Z0FAKE1D"
        },
        "after": {
          "alias": [
            {
              "evaluate_target_health": true,
              "name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
              "zone_id": "FAKE123"
            }
          ],
          "allow_overwrite": null,
          "failover_routing_policy": [],
          "fqdn": "fake_app-dev.fake_domain.amazon.byu.edu",
          "geolocation_routing_policy": [],
          "health_check_id": "",
          "id": "Z0FAKE1D_fake_app-dev.fake_domain.amazon.byu.edu._AAAA",
          "latency_routing_policy": [],
          "multivalue_answer_routing_policy": null,
          "name": "fake_app-dev.fake_domain.amazon.byu.edu",
          "records": [],
          "set_identifier": "",
          "ttl": 0,
          "type": "AAAA",
          "weighted_routing_policy": [],
          "zone_id": "Z0FAKE1D"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_security_group.alb-sg",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "alb-sg",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
          "description": "Controls access to the fake_app-dev-alb",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0fake1d",
          "ingress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 80,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 80
            }
          ],
          "name": "fake_app-dev-alb-sg",
          "name_prefix": null,
          "owner_id": "***",
          "revoke_rules_on_delete": false,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "timeouts": null,
          "vpc_id": "vpc-0fake1d"
        },
        "after": {
          "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
          "description": "Controls access to the fake_app-dev-alb",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0fake1d",
          "ingress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 80,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 80
            }
          ],
          "name": "fake_app-dev-alb-sg",
          "name_prefix": null,
          "owner_id": "***",
          "revoke_rules_on_delete": false,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "timeouts": null,
          "vpc_id": "vpc-0fake1d"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.aws_security_group.fargate_service_sg",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "fargate_service_sg",
      "provider_name": "aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
          "description": "Controls access to the Fargate Service",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0fake1d",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-0fake1d"
              ],
              "self": false,
              "to_port": 65535
            }
          ],
          "name": "fake_app-dev-fargate-sg",
          "name_prefix": null,
          "owner_id": "***",
          "revoke_rules_on_delete": false,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "timeouts": null,
          "vpc_id": "vpc-0fake1d"
        },
        "after": {
          "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
          "description": "Controls access to the Fargate Service",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "id": "sg-0fake1d",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-0fake1d"
              ],
              "self": false,
              "to_port": 65535
            }
          ],
          "name": "fake_app-dev-fargate-sg",
          "name_prefix": null,
          "owner_id": "***",
          "revoke_rules_on_delete": false,
          "tags": {
            "app": "fake_app-dev",
            "data-sensitivity": "confidential",
            "repo": "https://github.com/byu-oit/fake_app",
            "team": "FAKE_TEAM"
          },
          "timeouts": null,
          "vpc_id": "vpc-0fake1d"
        },
        "after_unknown": {}
      }
    },
    {
      "address": "module.app.module.fargate.local_file.appspec_json",
      "module_address": "module.app.module.fargate",
      "mode": "managed",
      "type": "local_file",
      "name": "appspec_json",
      "provider_name": "local",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "content_base64": null,
          "directory_permission": "0777",
          "file_permission": "0777",
          "filename": "/home/runner/work/fake_app/fake_app/terraform-iac/dev/app/appspec.json",
          "sensitive_content": null
        },
        "after_unknown": {
          "content": true,
          "id": true
        }
      }
    }
  ],
  "output_changes": {
    "codedeploy_app_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "fake_app-dev-codedeploy",
      "after_unknown": false
    },
    "codedeploy_appspec_json_file": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "/home/runner/work/fake_app/fake_app/terraform-iac/dev/app/appspec.json",
      "after_unknown": false
    },
    "codedeploy_deployment_group_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "fake_app-dev-deployment-group",
      "after_unknown": false
    }
  },
  "prior_state": {
    "format_version": "0.1",
    "terraform_version": "0.12.26",
    "values": {
      "outputs": {
        "codedeploy_app_name": {
          "sensitive": false,
          "value": "fake_app-dev-codedeploy"
        },
        "codedeploy_deployment_group_name": {
          "sensitive": false,
          "value": "fake_app-dev-deployment-group"
        }
      },
      "*******_module": {
        "child_modules": [
          {
            "resources": [
              {
                "address": "aws_security_group_rule.db_access",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "db_access",
                "provider_name": "aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "",
                  "from_port": 3306,
                  "id": "sgrule-012341234",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-0fake1d",
                  "self": false,
                  "source_security_group_id": "sg-0fake1d",
                  "to_port": 3306,
                  "type": "ingress"
                },
                "depends_on": [
                  "module.app.module.database.aws_security_group.db_security_group",
                  "module.app.module.fargate.aws_security_group.alb-sg",
                  "module.app.module.fargate.aws_security_group.fargate_service_sg"
                ]
              },
              {
                "address": "data.aws_ecr_repository.ecr_repo",
                "mode": "data",
                "type": "aws_ecr_repository",
                "name": "ecr_repo",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:ecr:us-west-2:***:repository/fake_app-dev",
                  "id": "fake_app-dev",
                  "name": "fake_app-dev",
                  "registry_id": "***",
                  "repository_url": "***.dkr.ecr.us-west-2.amazonaws.com/fake_app-dev",
                  "tags": {
                    "app": "fake_app-dev",
                    "data-sensitivity": "confidential",
                    "repo": "https://github.com/byu-oit/fake_app",
                    "team": "FAKE_TEAM"
                  }
                }
              }
            ],
            "address": "module.app",
            "child_modules": [
              {
                "resources": [
                  {
                    "address": "data.aws_acm_certificate.cert",
                    "mode": "data",
                    "type": "aws_acm_certificate",
                    "name": "cert",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:acm:us-west-2:***:certificate/0fake1d",
                      "domain": "fake_domain.amazon.byu.edu",
                      "id": "2020-06-24 19:40:11.645734343 +0000 UTC",
                      "key_types": null,
                      "most_recent": false,
                      "statuses": null,
                      "tags": {
                        "IAC": "Terraform"
                      },
                      "types": null
                    }
                  },
                  {
                    "address": "data.aws_acm_certificate.virginia",
                    "mode": "data",
                    "type": "aws_acm_certificate",
                    "name": "virginia",
                    "index": 0,
                    "provider_name": "aws.virginia",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:acm:us-east-1:***:certificate/bfdbbdd8-2245-4b87-9bdb-a6f36dee03f0",
                      "domain": "fake_domain.amazon.byu.edu",
                      "id": "2020-06-24 19:40:11.087617241 +0000 UTC",
                      "key_types": null,
                      "most_recent": false,
                      "statuses": null,
                      "tags": {
                        "IAC": "Terraform"
                      },
                      "types": null
                    }
                  },
                  {
                    "address": "data.aws_iam_account_alias.current",
                    "mode": "data",
                    "type": "aws_iam_account_alias",
                    "name": "current",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "account_alias": "fake_domain",
                      "id": "2020-06-24 19:40:09.518373467 +0000 UTC"
                    }
                  },
                  {
                    "address": "data.aws_iam_policy.role_permission_boundary",
                    "mode": "data",
                    "type": "aws_iam_policy",
                    "name": "role_permission_boundary",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::***:policy/iamRolePermissionBoundary",
                      "description": "Role Permission Boundary Policy - Managed by Terraform",
                      "id": "arn:aws:iam::***:policy/iamRolePermissionBoundary",
                      "name": "iamRolePermissionBoundary",
                      "path": "/",
                      "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AccountAdminPolicy\",\n            \"Effect\": \"Allow\",\n            \"NotAction\": \"iam:*\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"DenyPassUnsafeRoles\",\n            \"Effect\": \"Deny\",\n            \"Action\": [\n                \"iam:PassRole\"\n            ],\n            \"Resource\": [\n                \"arn:aws:iam::***:role/OrganizationAccountAccessRole\",\n                \"arn:aws:iam::***:role/Admin\",\n                \"arn:aws:iam::***:role/PowerUser\",\n                \"arn:aws:iam::***:role/PowerBuilder\",\n                \"arn:aws:iam::***:role/ReadOnly\",\n                \"arn:aws:iam::***:role/HawaiiPowerUser\",\n                \"arn:aws:iam::***:role/HawaiiReadOnly\"\n\t    ]\n        },\n        {\n            \"Sid\": \"AllowSomeIAM\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:PassRole\",\n            \t\"iam:ListServerCertificates\",\n            \t\"iam:GetServerCertificate\",\n            \t\"iam:GetRole\",\n            \t\"iam:GetRolePolicy\",\n            \t\"iam:CreateServiceLinkedRole\"\n            ], \n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"ProtectACSResources\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"*\",\n            \"Resource\": [\n                \"arn:aws:s3:::cloudtrail-***\",\n                \"arn:aws:s3:::aws-acs-***\",\n                \"arn:aws:cloudtrail:us-west-2:***:trail/aws-acs-logs-cloudtrail\",\n                \"arn:aws:dynamodb:us-west-2:***:table/aws-acs-***\"\n            ]\n        },\n        {\n            \"Sid\": \"ProtectACSParameters\",\n            \"Effect\": \"Deny\",\n            \"Action\": [\n                \"ssm:DeleteParameter\",\n                \"ssm:DeleteParameters\",\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ssm:us-west-2:***:parameter/acs/*\",\n                \"arn:aws:ssm:us-east-1:***:parameter/acs/*\"\n            ]\n        },\n        {\n            \"Sid\": \"BlockOddRegions\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"*\",\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringNotEquals\": {\n                    \"aws:RequestedRegion\": [\n                        \"us-west-2\",\n                        \"us-east-1\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Sid\": \"NoNewVPCs\",\n            \"Effect\": \"Deny\",\n            \"Action\": [\n                \"ec2:CreateVpc\",\n                \"ec2:CreateDefaultVpc\",\n                \"account:EnableRegion\",\n                \"account:DisableRegion\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n"
                    }
                  },
                  {
                    "address": "data.aws_iam_policy.user_permission_boundary",
                    "mode": "data",
                    "type": "aws_iam_policy",
                    "name": "user_permission_boundary",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::***:policy/iamUserPermissionBoundary",
                      "description": "User Permission Boundary Policy - Managed by Terraform",
                      "id": "arn:aws:iam::***:policy/iamUserPermissionBoundary",
                      "name": "iamUserPermissionBoundary",
                      "path": "/",
                      "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AccountAdminPolicy\",\n            \"Effect\": \"Allow\",\n            \"NotAction\": \"iam:*\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"DenyPassUnsafeRoles\",\n            \"Effect\": \"Deny\",\n            \"Action\": [\n                \"iam:PassRole\"\n            ],\n            \"Resource\": [\n                \"arn:aws:iam::***:role/OrganizationAccountAccessRole\",\n                \"arn:aws:iam::***:role/Admin\",\n                \"arn:aws:iam::***:role/PowerUser\",\n                \"arn:aws:iam::***:role/PowerBuilder\",\n                \"arn:aws:iam::***:role/ReadOnly\",\n                \"arn:aws:iam::***:role/HawaiiPowerUser\",\n                \"arn:aws:iam::***:role/HawaiiReadOnly\"\n\t    ]\n        },\n        {\n            \"Sid\": \"AllowSomeIAM\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:PassRole\",\n            \t\"iam:ListServerCertificates\",\n            \t\"iam:GetServerCertificate\",\n            \t\"iam:GetRole\",\n            \t\"iam:GetRolePolicy\",\n            \t\"iam:CreateServiceLinkedRole\"\n            ], \n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"ProtectACSResources\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"*\",\n            \"Resource\": [\n                \"arn:aws:s3:::cloudtrail-***\",\n                \"arn:aws:s3:::aws-acs-***\",\n                \"arn:aws:cloudtrail:us-west-2:***:trail/aws-acs-logs-cloudtrail\",\n                \"arn:aws:dynamodb:us-west-2:***:table/aws-acs-***\"\n            ]\n        },\n        {\n            \"Sid\": \"ProtectACSParameters\",\n            \"Effect\": \"Deny\",\n            \"Action\": [\n                \"ssm:DeleteParameter\",\n                \"ssm:DeleteParameters\",\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ssm:us-west-2:***:parameter/acs/*\",\n                \"arn:aws:ssm:us-east-1:***:parameter/acs/*\"\n            ]\n        },\n        {\n            \"Sid\": \"BlockOddRegions\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"*\",\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringNotEquals\": {\n                    \"aws:RequestedRegion\": [\n                        \"us-west-2\",\n                        \"us-east-1\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Sid\": \"NoNewVPCs\",\n            \"Effect\": \"Deny\",\n            \"Action\": [\n                \"ec2:CreateVpc\",\n                \"ec2:CreateDefaultVpc\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"LimitUserRights\",\n            \"Effect\": \"Deny\",\n            \"Action\": [\n                \"sts:AssumeRole\",\n                \"ec2:RunInstances\",\n                \"autoscaling:CreateAutoScalingGroup\",\n                \"account:EnableRegion\",\n                \"account:DisableRegion\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n"
                    }
                  },
                  {
                    "address": "data.aws_iam_role.power_builder",
                    "mode": "data",
                    "type": "aws_iam_role",
                    "name": "power_builder",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::***:role/PowerBuilder",
                      "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"codebuild.amazonaws.com\",\"events.amazonaws.com\",\"edgelambda.amazonaws.com\",\"codedeploy.amazonaws.com\",\"lambda.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
                      "assume_role_policy_document": null,
                      "create_date": "2019-10-18T19:28:27Z",
                      "description": "PowerBuilderPolicy and PowerPolicy - Managed by Terraform",
                      "id": "PowerBuilder",
                      "max_session_duration": 32400,
                      "name": "PowerBuilder",
                      "path": "/",
                      "permissions_boundary": "",
                      "role_id": null,
                      "role_name": null,
                      "tags": {},
                      "unique_id": "AROAQKWMX5RQBRYXAHQVY"
                    }
                  },
                  {
                    "address": "data.aws_iam_role.power_user",
                    "mode": "data",
                    "type": "aws_iam_role",
                    "name": "power_user",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::***:role/PowerUser",
                      "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::***:saml-provider/ADFS\"},\"Action\":\"sts:AssumeRoleWithSAML\",\"Condition\":{\"StringEquals\":{\"SAML:aud\":\"https://signin.aws.amazon.com/saml\"}}}]}",
                      "assume_role_policy_document": null,
                      "create_date": "2019-10-18T19:28:27Z",
                      "description": "PowerUserPolicy and PowerPolicy - Managed by Terraform",
                      "id": "PowerUser",
                      "max_session_duration": 32400,
                      "name": "PowerUser",
                      "path": "/",
                      "permissions_boundary": "",
                      "role_id": null,
                      "role_name": null,
                      "tags": {},
                      "unique_id": "AROAQKWMX5RQFWZGDCD3I"
                    }
                  },
                  {
                    "address": "data.aws_iam_role.read_only",
                    "mode": "data",
                    "type": "aws_iam_role",
                    "name": "read_only",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::***:role/ReadOnly",
                      "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::***:saml-provider/ADFS\"},\"Action\":\"sts:AssumeRoleWithSAML\",\"Condition\":{\"StringEquals\":{\"SAML:aud\":\"https://signin.aws.amazon.com/saml\"}}}]}",
                      "assume_role_policy_document": null,
                      "create_date": "2019-10-18T19:28:27Z",
                      "description": "ReadOnly and ReadOnlyDenies - Managed by Terraform",
                      "id": "ReadOnly",
                      "max_session_duration": 32400,
                      "name": "ReadOnly",
                      "path": "/",
                      "permissions_boundary": "",
                      "role_id": null,
                      "role_name": null,
                      "tags": {},
                      "unique_id": "AROAQKWMX5RQIZFBVRSAE"
                    }
                  },
                  {
                    "address": "data.aws_region.current",
                    "mode": "data",
                    "type": "aws_region",
                    "name": "current",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "current": null,
                      "description": "US West (Oregon)",
                      "endpoint": "ec2.us-west-2.amazonaws.com",
                      "id": "us-west-2",
                      "name": "us-west-2"
                    }
                  },
                  {
                    "address": "data.aws_route53_zone.zone",
                    "mode": "data",
                    "type": "aws_route53_zone",
                    "name": "zone",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "caller_reference": "terraform-20191018192825296800000001",
                      "comment": "Managed by Terraform",
                      "id": "Z0FAKE1D",
                      "linked_service_description": null,
                      "linked_service_principal": null,
                      "name": "fake_domain.amazon.byu.edu.",
                      "name_servers": [
                        "ns-1069.awsdns-05.org",
                        "ns-1594.awsdns-07.co.uk",
                        "ns-190.awsdns-23.com",
                        "ns-890.awsdns-47.net"
                      ],
                      "private_zone": false,
                      "resource_record_set_count": 17,
                      "tags": {
                        "IAC": "Terraform",
                        "env": "dev",
                        "repo": "https://github.com/byu-oit/aws-acs"
                      },
                      "vpc_id": null,
                      "zone_id": "Z0FAKE1D"
                    }
                  },
                  {
                    "address": "data.aws_security_group.oracle",
                    "mode": "data",
                    "type": "aws_security_group",
                    "name": "oracle",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0b4eb66efead1d1e1",
                      "description": "Used to connect to ORACLE Xinetd Server in Platform Account - Managed by Terraform",
                      "filter": null,
                      "id": "sg-0b4eb66efead1d1e1",
                      "name": "vpn_oregon_dev_xinetd",
                      "tags": {
                        "IAC": "Terraform",
                        "Name": "ORACLE/CMAN Xinetd Security Group"
                      },
                      "vpc_id": "vpc-07016e8396cc0d094"
                    }
                  },
                  {
                    "address": "data.aws_security_group.rds",
                    "mode": "data",
                    "type": "aws_security_group",
                    "name": "rds",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-000968b3647ca2fad",
                      "description": "Security Group for RDS - Managed by Terraform",
                      "filter": [
                        {
                          "name": "group-name",
                          "values": [
                            "*rds_security_group*"
                          ]
                        },
                        {
                          "name": "vpc-id",
                          "values": [
                            "vpc-0fake1d"
                          ]
                        }
                      ],
                      "id": "sg-000968b3647ca2fad",
                      "name": "rds_security_group_oit_oregon_dev",
                      "tags": {
                        "IAC": "Terraform",
                        "Name": "RDS Security Group - OIT Oregon Dev"
                      },
                      "vpc_id": "vpc-0fake1d"
                    }
                  },
                  {
                    "address": "data.aws_security_group.ssh_rdp",
                    "mode": "data",
                    "type": "aws_security_group",
                    "name": "ssh_rdp",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-02a5b89b0eef89932",
                      "description": "Security Group for SSH/RDP - Managed by Terraform",
                      "filter": [
                        {
                          "name": "group-name",
                          "values": [
                            "*ssh_rdp*"
                          ]
                        },
                        {
                          "name": "vpc-id",
                          "values": [
                            "vpc-0fake1d"
                          ]
                        }
                      ],
                      "id": "sg-02a5b89b0eef89932",
                      "name": "ssh_rdp_sg_oit_oregon_dev",
                      "tags": {
                        "IAC": "Terraform",
                        "Name": "SSH/RDP from BYU"
                      },
                      "vpc_id": "vpc-0fake1d"
                    }
                  },
                  {
                    "address": "data.aws_ssm_parameter.acs_parameters",
                    "mode": "data",
                    "type": "aws_ssm_parameter",
                    "name": "acs_parameters",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ssm:us-west-2:***:parameter/acsParameters",
                      "id": "acsParameters",
                      "name": "acsParameters",
                      "type": "String",
                      "value": "{\"/acs/acm/zone-cert-arn\": \"arn:aws:acm:us-west-2:***:certificate/0fake1d\", \"/acs/acm/zone-cert-id\": \"arn:aws:acm:us-west-2:***:certificate/0fake1d\", \"/acs/dns/zone-id\": \"Z0FAKE1D\", \"/acs/dns/zone-name\": \"fake_domain.amazon.byu.edu.\", \"/acs/git/token\": \"27c8476d8a501f2f4f789ece25e5418b2bad46c0\", \"/acs/iam/iamRolePermissionBoundary\": \"arn:aws:iam::***:policy/iamRolePermissionBoundary\", \"/acs/iam/iamUserPermissionBoundary\": \"arn:aws:iam::***:policy/iamUserPermissionBoundary\", \"/acs/vpc/oit-oregon-dev\": \"vpc-0fake1d\", \"/acs/vpc/oit-oregon-dev-data-a\": \"subnet-0f4cb0342b0732de1\", \"/acs/vpc/oit-oregon-dev-data-b\": \"subnet-083fda44af54ef47a\", \"/acs/vpc/oit-oregon-dev-private-b\": \"subnet-0fake1d\", \"/acs/vpc/sshrdp_sg\": \"ssh_rdp_sg_oit_oregon_dev\", \"/acs/vpc/vpc-name\": \"oit-oregon-dev\", \"/acs/vpc/vpn-oit-oregon-dev-data-b\": \"subnet-098f9ec9e3cd13db8\", \"/acs/vpc/vpn-oit-oregon-dev-private-b\": \"subnet-0069c0ca4522027f5\", \"/acs/vpc/xinetd-sg-id\": \"sg-0b4eb66efead1d1e1\", \"/acs/vpc/oit-oregon-dev-public-a\": \"subnet-0fake1d\", \"/acs/vpc/oit-oregon-dev-public-b\": \"subnet-0fake1d\", \"/acs/vpc/rds_sg\": \"rds_security_group_oit_oregon_dev\", \"/acs/vpc/rds_vpn_sg\": \"rds_security_group_vpn_oit_oregon_dev\", \"/acs/vpc/sshrdp_vpn_sg\": \"ssh_rdp_sg_vpn_oit_oregon_dev\", \"/acs/vpc/vpn-oit-oregon-dev\": \"vpc-07016e8396cc0d094\", \"/acs/vpc/vpn-oit-oregon-dev-data-a\": \"subnet-04ef6dfe521d80527\", \"/acs/vpc/vpn-oit-oregon-dev-private-a\": \"subnet-04e5fcbaff98d47d4\", \"/acs/vpc/vpn-oit-oregon-dev-public-a\": \"subnet-0940eb9b3c9f477db\", \"/acs/vpc/vpn-oit-oregon-dev-public-b\": \"subnet-0db85a6e19afc78a9\", \"/acs/vpc/oit-oregon-dev-private-a\": \"subnet-0fake1d\", \"/acs/vpc/vpn-vpc-name\": \"vpn-oit-oregon-dev\"}",
                      "version": 126331,
                      "with_decryption": true
                    }
                  },
                  {
                    "address": "data.aws_subnet.data_a",
                    "mode": "data",
                    "type": "aws_subnet",
                    "name": "data_a",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:867441714531:subnet/subnet-0f4cb0342b0732de1",
                      "assign_ipv6_address_on_creation": false,
                      "availability_zone": "us-west-2b",
                      "availability_zone_id": "usw2-az1",
                      "cidr_block": "172.17.192.0/19",
                      "default_for_az": false,
                      "filter": null,
                      "id": "subnet-0f4cb0342b0732de1",
                      "ipv6_cidr_block": null,
                      "ipv6_cidr_block_association_id": null,
                      "map_public_ip_on_launch": false,
                      "outpost_arn": "",
                      "owner_id": "867441714531",
                      "state": "available",
                      "tags": {
                        "Name": "oit-oregon-dev-data-a"
                      },
                      "vpc_id": "vpc-0fake1d"
                    }
                  },
                  {
                    "address": "data.aws_subnet.data_b",
                    "mode": "data",
                    "type": "aws_subnet",
                    "name": "data_b",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:867441714531:subnet/subnet-083fda44af54ef47a",
                      "assign_ipv6_address_on_creation": false,
                      "availability_zone": "us-west-2a",
                      "availability_zone_id": "usw2-az2",
                      "cidr_block": "172.17.224.0/19",
                      "default_for_az": false,
                      "filter": null,
                      "id": "subnet-083fda44af54ef47a",
                      "ipv6_cidr_block": null,
                      "ipv6_cidr_block_association_id": null,
                      "map_public_ip_on_launch": false,
                      "outpost_arn": "",
                      "owner_id": "867441714531",
                      "state": "available",
                      "tags": {
                        "Name": "oit-oregon-dev-data-b"
                      },
                      "vpc_id": "vpc-0fake1d"
                    }
                  },
                  {
                    "address": "data.aws_subnet.private_a",
                    "mode": "data",
                    "type": "aws_subnet",
                    "name": "private_a",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:867441714531:subnet/subnet-0fake1d",
                      "assign_ipv6_address_on_creation": false,
                      "availability_zone": "us-west-2b",
                      "availability_zone_id": "usw2-az1",
                      "cidr_block": "172.17.64.0/18",
                      "default_for_az": false,
                      "filter": null,
                      "id": "subnet-0fake1d",
                      "ipv6_cidr_block": null,
                      "ipv6_cidr_block_association_id": null,
                      "map_public_ip_on_launch": false,
                      "outpost_arn": "",
                      "owner_id": "867441714531",
                      "state": "available",
                      "tags": {
                        "Name": "oit-oregon-dev-private-a"
                      },
                      "vpc_id": "vpc-0fake1d"
                    }
                  },
                  {
                    "address": "data.aws_subnet.private_b",
                    "mode": "data",
                    "type": "aws_subnet",
                    "name": "private_b",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:867441714531:subnet/subnet-0fake1d",
                      "assign_ipv6_address_on_creation": false,
                      "availability_zone": "us-west-2a",
                      "availability_zone_id": "usw2-az2",
                      "cidr_block": "172.17.128.0/18",
                      "default_for_az": false,
                      "filter": null,
                      "id": "subnet-0fake1d",
                      "ipv6_cidr_block": null,
                      "ipv6_cidr_block_association_id": null,
                      "map_public_ip_on_launch": false,
                      "outpost_arn": "",
                      "owner_id": "867441714531",
                      "state": "available",
                      "tags": {
                        "Name": "oit-oregon-dev-private-b"
                      },
                      "vpc_id": "vpc-0fake1d"
                    }
                  },
                  {
                    "address": "data.aws_subnet.public_a",
                    "mode": "data",
                    "type": "aws_subnet",
                    "name": "public_a",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:867441714531:subnet/subnet-0fake1d",
                      "assign_ipv6_address_on_creation": false,
                      "availability_zone": "us-west-2b",
                      "availability_zone_id": "usw2-az1",
                      "cidr_block": "172.17.0.0/19",
                      "default_for_az": false,
                      "filter": null,
                      "id": "subnet-0fake1d",
                      "ipv6_cidr_block": null,
                      "ipv6_cidr_block_association_id": null,
                      "map_public_ip_on_launch": true,
                      "outpost_arn": "",
                      "owner_id": "867441714531",
                      "state": "available",
                      "tags": {
                        "Name": "oit-oregon-dev-public-a"
                      },
                      "vpc_id": "vpc-0fake1d"
                    }
                  },
                  {
                    "address": "data.aws_subnet.public_b",
                    "mode": "data",
                    "type": "aws_subnet",
                    "name": "public_b",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:867441714531:subnet/subnet-0fake1d",
                      "assign_ipv6_address_on_creation": false,
                      "availability_zone": "us-west-2a",
                      "availability_zone_id": "usw2-az2",
                      "cidr_block": "172.17.32.0/19",
                      "default_for_az": false,
                      "filter": null,
                      "id": "subnet-0fake1d",
                      "ipv6_cidr_block": null,
                      "ipv6_cidr_block_association_id": null,
                      "map_public_ip_on_launch": true,
                      "outpost_arn": "",
                      "owner_id": "867441714531",
                      "state": "available",
                      "tags": {
                        "Name": "oit-oregon-dev-public-b"
                      },
                      "vpc_id": "vpc-0fake1d"
                    }
                  },
                  {
                    "address": "data.aws_vpc.vpc",
                    "mode": "data",
                    "type": "aws_vpc",
                    "name": "vpc",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:***:vpc/vpc-0fake1d",
                      "cidr_block": "172.17.0.0/16",
                      "cidr_block_associations": [
                        {
                          "association_id": "vpc-cidr-assoc-0b5bc60464f6096ad",
                          "cidr_block": "172.17.0.0/16",
                          "state": "associated"
                        }
                      ],
                      "default": false,
                      "dhcp_options_id": "dopt-fa2e9d82",
                      "enable_dns_hostnames": true,
                      "enable_dns_support": true,
                      "filter": null,
                      "id": "vpc-0fake1d",
                      "instance_tenancy": "default",
                      "ipv6_association_id": null,
                      "ipv6_cidr_block": null,
                      "main_route_table_id": "rtb-0055fed2722008648",
                      "owner_id": "867441714531",
                      "state": "available",
                      "tags": {
                        "Name": "oit-oregon-dev"
                      }
                    }
                  }
                ],
                "address": "module.app.module.acs"
              },
              {
                "resources": [
                  {
                    "address": "aws_alb.alb",
                    "mode": "managed",
                    "type": "aws_alb",
                    "name": "alb",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "access_logs": [
                        {
                          "bucket": "",
                          "enabled": false,
                          "prefix": ""
                        }
                      ],
                      "arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
                      "arn_suffix": "app/fake_app-dev-alb/fake1d",
                      "dns_name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
                      "drop_invalid_header_fields": false,
                      "enable_cross_zone_load_balancing": null,
                      "enable_deletion_protection": false,
                      "enable_http2": true,
                      "id": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
                      "idle_timeout": 60,
                      "internal": false,
                      "ip_address_type": "ipv4",
                      "load_balancer_type": "application",
                      "name": "fake_app-dev-alb",
                      "name_prefix": null,
                      "security_groups": [
                        "sg-0fake1d"
                      ],
                      "subnet_mapping": [
                        {
                          "allocation_id": "",
                          "subnet_id": "subnet-0fake1d"
                        },
                        {
                          "allocation_id": "",
                          "subnet_id": "subnet-0fake1d"
                        }
                      ],
                      "subnets": [
                        "subnet-0fake1d",
                        "subnet-0fake1d"
                      ],
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "timeouts": null,
                      "vpc_id": "vpc-0fake1d",
                      "zone_id": "FAKE123"
                    },
                    "depends_on": [
                      "module.app.module.fargate.aws_security_group.alb-sg"
                    ]
                  },
                  {
                    "address": "aws_alb_listener.http_to_https",
                    "mode": "managed",
                    "type": "aws_alb_listener",
                    "name": "http_to_https",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
                      "certificate_arn": null,
                      "default_action": [
                        {
                          "authenticate_cognito": [],
                          "authenticate_oidc": [],
                          "fixed_response": [],
                          "forward": [],
                          "order": 1,
                          "redirect": [
                            {
                              "host": "#{host}",
                              "path": "/#{path}",
                              "port": "443",
                              "protocol": "HTTPS",
                              "query": "#{query}",
                              "status_code": "HTTP_301"
                            }
                          ],
                          "target_group_arn": "",
                          "type": "redirect"
                        }
                      ],
                      "id": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
                      "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
                      "port": 80,
                      "protocol": "HTTP",
                      "ssl_policy": "",
                      "timeouts": null
                    },
                    "depends_on": [
                      "module.app.module.fargate.aws_alb.alb",
                      "module.app.module.fargate.aws_alb_listener.https",
                      "module.app.module.fargate.aws_alb_target_group.blue",
                      "module.app.module.fargate.aws_alb_target_group.green",
                      "module.app.module.fargate.aws_security_group.alb-sg"
                    ]
                  },
                  {
                    "address": "aws_alb_listener.https",
                    "mode": "managed",
                    "type": "aws_alb_listener",
                    "name": "https",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
                      "certificate_arn": "arn:aws:acm:us-west-2:***:certificate/0fake1d",
                      "default_action": [
                        {
                          "authenticate_cognito": [],
                          "authenticate_oidc": [],
                          "fixed_response": [],
                          "forward": [],
                          "order": 1,
                          "redirect": [],
                          "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
                          "type": "forward"
                        }
                      ],
                      "id": "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d",
                      "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:***:loadbalancer/app/fake_app-dev-alb/fake1d",
                      "port": 443,
                      "protocol": "HTTPS",
                      "ssl_policy": "ELBSecurityPolicy-2016-08",
                      "timeouts": null
                    },
                    "depends_on": [
                      "module.app.module.fargate.aws_alb.alb",
                      "module.app.module.fargate.aws_alb_target_group.blue",
                      "module.app.module.fargate.aws_alb_target_group.green",
                      "module.app.module.fargate.aws_security_group.alb-sg"
                    ]
                  },
                  {
                    "address": "aws_alb_target_group.blue",
                    "mode": "managed",
                    "type": "aws_alb_target_group",
                    "name": "blue",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
                      "arn_suffix": "targetgroup/fake_app-dev-tgb/0fake1d",
                      "deregistration_delay": 60,
                      "health_check": [
                        {
                          "enabled": true,
                          "healthy_threshold": 3,
                          "interval": 30,
                          "matcher": "200",
                          "path": "/health",
                          "port": "traffic-port",
                          "protocol": "HTTP",
                          "timeout": 5,
                          "unhealthy_threshold": 3
                        }
                      ],
                      "id": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d",
                      "lambda_multi_value_headers_enabled": false,
                      "load_balancing_algorithm_type": "least_outstanding_requests",
                      "name": "fake_app-dev-tgb",
                      "name_prefix": null,
                      "port": 8080,
                      "protocol": "HTTP",
                      "proxy_protocol_v2": false,
                      "slow_start": 0,
                      "stickiness": [
                        {
                          "cookie_duration": 86400,
                          "enabled": false,
                          "type": "lb_cookie"
                        }
                      ],
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "target_type": "ip",
                      "vpc_id": "vpc-0fake1d"
                    },
                    "depends_on": [
                      "module.app.module.fargate.aws_alb.alb",
                      "module.app.module.fargate.aws_security_group.alb-sg"
                    ]
                  },
                  {
                    "address": "aws_alb_target_group.green",
                    "mode": "managed",
                    "type": "aws_alb_target_group",
                    "name": "green",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgg/0fake1d",
                      "arn_suffix": "targetgroup/fake_app-dev-tgg/0fake1d",
                      "deregistration_delay": 60,
                      "health_check": [
                        {
                          "enabled": true,
                          "healthy_threshold": 3,
                          "interval": 30,
                          "matcher": "200",
                          "path": "/health",
                          "port": "traffic-port",
                          "protocol": "HTTP",
                          "timeout": 5,
                          "unhealthy_threshold": 3
                        }
                      ],
                      "id": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgg/0fake1d",
                      "lambda_multi_value_headers_enabled": false,
                      "load_balancing_algorithm_type": "least_outstanding_requests",
                      "name": "fake_app-dev-tgg",
                      "name_prefix": null,
                      "port": 8080,
                      "protocol": "HTTP",
                      "proxy_protocol_v2": false,
                      "slow_start": 0,
                      "stickiness": [
                        {
                          "cookie_duration": 86400,
                          "enabled": false,
                          "type": "lb_cookie"
                        }
                      ],
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "target_type": "ip",
                      "vpc_id": "vpc-0fake1d"
                    },
                    "depends_on": [
                      "module.app.module.fargate.aws_alb.alb",
                      "module.app.module.fargate.aws_security_group.alb-sg"
                    ]
                  },
                  {
                    "address": "aws_cloudwatch_log_group.container_log_group",
                    "mode": "managed",
                    "type": "aws_cloudwatch_log_group",
                    "name": "container_log_group",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:logs:us-west-2:***:log-group:fargate/fake_app-dev:*",
                      "id": "fargate/fake_app-dev",
                      "kms_key_id": "",
                      "name": "fargate/fake_app-dev",
                      "name_prefix": null,
                      "retention_in_days": 7,
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      }
                    }
                  },
                  {
                    "address": "aws_codedeploy_app.app",
                    "mode": "managed",
                    "type": "aws_codedeploy_app",
                    "name": "app",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "compute_platform": "ECS",
                      "id": "fake1d:fake_app-dev-codedeploy",
                      "name": "fake_app-dev-codedeploy",
                      "unique_id": null
                    }
                  },
                  {
                    "address": "aws_codedeploy_deployment_group.deploymentgroup",
                    "mode": "managed",
                    "type": "aws_codedeploy_deployment_group",
                    "name": "deploymentgroup",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "alarm_configuration": [],
                      "app_name": "fake_app-dev-codedeploy",
                      "auto_rollback_configuration": [
                        {
                          "enabled": true,
                          "events": [
                            "DEPLOYMENT_FAILURE"
                          ]
                        }
                      ],
                      "autoscaling_groups": [],
                      "blue_green_deployment_config": [
                        {
                          "deployment_ready_option": [
                            {
                              "action_on_timeout": "CONTINUE_DEPLOYMENT",
                              "wait_time_in_minutes": 0
                            }
                          ],
                          "green_fleet_provisioning_option": [],
                          "terminate_blue_instances_on_deployment_success": [
                            {
                              "action": "TERMINATE",
                              "termination_wait_time_in_minutes": 1
                            }
                          ]
                        }
                      ],
                      "deployment_config_name": "CodeDeployDefault.ECSAllAtOnce",
                      "deployment_group_name": "fake_app-dev-deployment-group",
                      "deployment_style": [
                        {
                          "deployment_option": "WITH_TRAFFIC_CONTROL",
                          "deployment_type": "BLUE_GREEN"
                        }
                      ],
                      "ec2_tag_filter": [],
                      "ec2_tag_set": [],
                      "ecs_service": [
                        {
                          "cluster_name": "fake_app-dev",
                          "service_name": "fake_app-dev"
                        }
                      ],
                      "id": "fake1d",
                      "load_balancer_info": [
                        {
                          "elb_info": [],
                          "target_group_info": [],
                          "target_group_pair_info": [
                            {
                              "prod_traffic_route": [
                                {
                                  "listener_arns": [
                                    "arn:aws:elasticloadbalancing:us-west-2:***:listener/app/fake_app-dev-alb/fake1d/0fake1d"
                                  ]
                                }
                              ],
                              "target_group": [
                                {
                                  "name": "fake_app-dev-tgb"
                                },
                                {
                                  "name": "fake_app-dev-tgg"
                                }
                              ],
                              "test_traffic_route": []
                            }
                          ]
                        }
                      ],
                      "on_premises_instance_tag_filter": [],
                      "service_role_arn": "arn:aws:iam::***:role/PowerBuilder",
                      "trigger_configuration": []
                    },
                    "depends_on": [
                      "module.app.module.fargate.aws_alb_listener.https",
                      "module.app.module.fargate.aws_alb_listener.test_listener",
                      "module.app.module.fargate.aws_alb_target_group.blue",
                      "module.app.module.fargate.aws_alb_target_group.green",
                      "module.app.module.fargate.aws_codedeploy_app.app",
                      "module.app.module.fargate.aws_ecs_cluster.cluster",
                      "module.app.module.fargate.aws_ecs_service.service"
                    ]
                  },
                  {
                    "address": "aws_ecs_cluster.cluster",
                    "mode": "managed",
                    "type": "aws_ecs_cluster",
                    "name": "cluster",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
                      "capacity_providers": [],
                      "default_capacity_provider_strategy": [],
                      "id": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
                      "name": "fake_app-dev",
                      "setting": [
                        {
                          "name": "containerInsights",
                          "value": "enabled"
                        }
                      ],
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      }
                    }
                  },
                  {
                    "address": "aws_ecs_service.service",
                    "mode": "managed",
                    "type": "aws_ecs_service",
                    "name": "service",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "capacity_provider_strategy": [],
                      "cluster": "arn:aws:ecs:us-west-2:***:cluster/fake_app-dev",
                      "deployment_controller": [
                        {
                          "type": "CODE_DEPLOY"
                        }
                      ],
                      "deployment_maximum_percent": 200,
                      "deployment_minimum_healthy_percent": 100,
                      "desired_count": 1,
                      "enable_ecs_managed_tags": false,
                      "force_new_deployment": null,
                      "health_check_grace_period_seconds": 0,
                      "iam_role": "aws-service-role",
                      "id": "arn:aws:ecs:us-west-2:***:service/fake_app-dev/fake_app-dev",
                      "launch_type": "FARGATE",
                      "load_balancer": [
                        {
                          "container_name": "main",
                          "container_port": 8080,
                          "elb_name": "",
                          "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:***:targetgroup/fake_app-dev-tgb/0fake1d"
                        }
                      ],
                      "name": "fake_app-dev",
                      "network_configuration": [
                        {
                          "assign_public_ip": true,
                          "security_groups": [
                            "sg-0fake1d"
                          ],
                          "subnets": [
                            "subnet-0fake1d",
                            "subnet-0fake1d"
                          ]
                        }
                      ],
                      "ordered_placement_strategy": [],
                      "placement_constraints": [],
                      "placement_strategy": [],
                      "platform_version": "1.4.0",
                      "propagate_tags": "NONE",
                      "scheduling_strategy": "REPLICA",
                      "service_registries": [],
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "task_definition": "arn:aws:ecs:us-west-2:***:task-definition/fake_app-dev-def:5"
                    },
                    "depends_on": [
                      "module.app.module.database.aws_db_instance.database",
                      "module.app.module.database.aws_security_group.db_security_group",
                      "module.app.module.database.aws_ssm_parameter.master_password",
                      "module.app.module.database.aws_ssm_parameter.master_username",
                      "module.app.module.database.random_password.default",
                      "module.app.module.fargate.aws_alb.alb",
                      "module.app.module.fargate.aws_alb_target_group.blue",
                      "module.app.module.fargate.aws_ecs_cluster.cluster",
                      "module.app.module.fargate.aws_ecs_task_definition.task_def",
                      "module.app.module.fargate.aws_iam_role.task_execution_role",
                      "module.app.module.fargate.aws_iam_role.task_role",
                      "module.app.module.fargate.aws_security_group.alb-sg",
                      "module.app.module.fargate.aws_security_group.fargate_service_sg"
                    ]
                  },
                  {
                    "address": "aws_ecs_task_definition.task_def",
                    "mode": "managed",
                    "type": "aws_ecs_task_definition",
                    "name": "task_def",
                    "provider_name": "aws",
                    "schema_version": 1,
                    "values": {
                      "arn": "arn:aws:ecs:us-west-2:***:task-definition/fake_app-dev-def:5",
                      "container_definitions": "[{\"cpu\":0,\"environment\":[{\"name\":\"ENV\",\"value\":\"dev\"},{\"name\":\"db_url\",\"value\":\"jdbc:mysql://fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com:3306/deleteme2dev\"}],\"essential\":true,\"image\":\"***.dkr.ecr.us-west-2.amazonaws.com/fake_app-dev:2020-06-17_17-43-10\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"fargate/fake_app-dev\",\"awslogs-region\":\"us-west-2\",\"awslogs-stream-prefix\":\"fake_app-dev\"}},\"mountPoints\":[],\"name\":\"main\",\"portMappings\":[{\"containerPort\":8080,\"hostPort\":8080,\"protocol\":\"tcp\"}],\"privileged\":false,\"secrets\":[{\"name\":\"db_password\",\"valueFrom\":\"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password\"},{\"name\":\"db_username\",\"valueFrom\":\"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username\"}],\"volumesFrom\":[]}]",
                      "cpu": "256",
                      "execution_role_arn": "arn:aws:iam::***:role/fake_app-dev-taskExecutionRole",
                      "family": "fake_app-dev-def",
                      "id": "fake_app-dev-def",
                      "inference_accelerator": [],
                      "ipc_mode": "",
                      "memory": "512",
                      "network_mode": "awsvpc",
                      "pid_mode": "",
                      "placement_constraints": [],
                      "proxy_configuration": [],
                      "requires_compatibilities": [
                        "FARGATE"
                      ],
                      "revision": 5,
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "task_role_arn": "arn:aws:iam::***:role/fake_app-dev-taskRole",
                      "volume": []
                    },
                    "depends_on": [
                      "module.app.module.database.aws_db_instance.database",
                      "module.app.module.database.aws_ssm_parameter.master_password",
                      "module.app.module.database.aws_ssm_parameter.master_username",
                      "module.app.module.fargate.aws_iam_role.task_execution_role",
                      "module.app.module.fargate.aws_iam_role.task_role"
                    ]
                  },
                  {
                    "address": "aws_iam_policy.secrets_access",
                    "mode": "managed",
                    "type": "aws_iam_policy",
                    "name": "secrets_access",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
                      "description": "",
                      "id": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
                      "name": "fake_app-dev_secrets_access",
                      "name_prefix": null,
                      "path": "/",
                      "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssm:GetParemetersByPath\",\n        \"ssm:GetParameters\",\n        \"ssm:GetParameter\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username\",\n        \"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password\"\n      ]\n    }\n  ]\n}"
                    },
                    "depends_on": [
                      "module.app.module.database.aws_db_instance.database",
                      "module.app.module.database.aws_security_group.db_security_group",
                      "module.app.module.database.aws_ssm_parameter.master_password",
                      "module.app.module.database.aws_ssm_parameter.master_username",
                      "module.app.module.database.random_password.default"
                    ]
                  },
                  {
                    "address": "aws_iam_role.task_execution_role",
                    "mode": "managed",
                    "type": "aws_iam_role",
                    "name": "task_execution_role",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::***:role/fake_app-dev-taskExecutionRole",
                      "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                      "create_date": "2020-06-17T14:59:29Z",
                      "description": "",
                      "force_detach_policies": false,
                      "id": "fake_app-dev-taskExecutionRole",
                      "max_session_duration": 3600,
                      "name": "fake_app-dev-taskExecutionRole",
                      "name_prefix": null,
                      "path": "/",
                      "permissions_boundary": "arn:aws:iam::***:policy/iamRolePermissionBoundary",
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "unique_id": "AROAQKWMX5RQFY26MWWWF"
                    }
                  },
                  {
                    "address": "aws_iam_role.task_role",
                    "mode": "managed",
                    "type": "aws_iam_role",
                    "name": "task_role",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::***:role/fake_app-dev-taskRole",
                      "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                      "create_date": "2020-06-17T14:59:29Z",
                      "description": "",
                      "force_detach_policies": false,
                      "id": "fake_app-dev-taskRole",
                      "max_session_duration": 3600,
                      "name": "fake_app-dev-taskRole",
                      "name_prefix": null,
                      "path": "/",
                      "permissions_boundary": "arn:aws:iam::***:policy/iamRolePermissionBoundary",
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "unique_id": "FAKE1D"
                    }
                  },
                  {
                    "address": "aws_iam_role_policy_attachment.secret_task_policy_attach",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "secret_task_policy_attach",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "id": "fake_app-dev-taskRole-0FAKE1D",
                      "policy_arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
                      "role": "fake_app-dev-taskRole"
                    },
                    "depends_on": [
                      "module.app.module.database.aws_db_instance.database",
                      "module.app.module.database.aws_security_group.db_security_group",
                      "module.app.module.database.aws_ssm_parameter.master_password",
                      "module.app.module.database.aws_ssm_parameter.master_username",
                      "module.app.module.database.random_password.default",
                      "module.app.module.fargate.aws_iam_policy.secrets_access",
                      "module.app.module.fargate.aws_iam_role.task_role"
                    ]
                  },
                  {
                    "address": "aws_iam_role_policy_attachment.secrets_policy_attach",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "secrets_policy_attach",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "id": "fake_app-dev-taskExecutionRole-0FAKE1D",
                      "policy_arn": "arn:aws:iam::***:policy/fake_app-dev_secrets_access",
                      "role": "fake_app-dev-taskExecutionRole"
                    },
                    "depends_on": [
                      "module.app.module.database.aws_db_instance.database",
                      "module.app.module.database.aws_security_group.db_security_group",
                      "module.app.module.database.aws_ssm_parameter.master_password",
                      "module.app.module.database.aws_ssm_parameter.master_username",
                      "module.app.module.database.random_password.default",
                      "module.app.module.fargate.aws_iam_policy.secrets_access",
                      "module.app.module.fargate.aws_iam_role.task_execution_role"
                    ]
                  },
                  {
                    "address": "aws_iam_role_policy_attachment.task_execution_policy_attach",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "task_execution_policy_attach",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "id": "fake_app-dev-taskExecutionRole-0FAKE1D",
                      "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
                      "role": "fake_app-dev-taskExecutionRole"
                    },
                    "depends_on": [
                      "module.app.module.fargate.aws_iam_role.task_execution_role"
                    ]
                  },
                  {
                    "address": "aws_route53_record.a_record",
                    "mode": "managed",
                    "type": "aws_route53_record",
                    "name": "a_record",
                    "provider_name": "aws",
                    "schema_version": 2,
                    "values": {
                      "alias": [
                        {
                          "evaluate_target_health": true,
                          "name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
                          "zone_id": "FAKE123"
                        }
                      ],
                      "allow_overwrite": null,
                      "failover_routing_policy": [],
                      "fqdn": "fake_app-dev.fake_domain.amazon.byu.edu",
                      "geolocation_routing_policy": [],
                      "health_check_id": "",
                      "id": "Z0FAKE1D_fake_app-dev.fake_domain.amazon.byu.edu._A",
                      "latency_routing_policy": [],
                      "multivalue_answer_routing_policy": null,
                      "name": "fake_app-dev.fake_domain.amazon.byu.edu",
                      "records": [],
                      "set_identifier": "",
                      "ttl": 0,
                      "type": "A",
                      "weighted_routing_policy": [],
                      "zone_id": "Z0FAKE1D"
                    },
                    "depends_on": [
                      "module.app.module.fargate.aws_alb.alb",
                      "module.app.module.fargate.aws_security_group.alb-sg"
                    ]
                  },
                  {
                    "address": "aws_route53_record.aaaa_record",
                    "mode": "managed",
                    "type": "aws_route53_record",
                    "name": "aaaa_record",
                    "provider_name": "aws",
                    "schema_version": 2,
                    "values": {
                      "alias": [
                        {
                          "evaluate_target_health": true,
                          "name": "fake_app-dev-alb-1234567890.us-west-2.elb.amazonaws.com",
                          "zone_id": "FAKE123"
                        }
                      ],
                      "allow_overwrite": null,
                      "failover_routing_policy": [],
                      "fqdn": "fake_app-dev.fake_domain.amazon.byu.edu",
                      "geolocation_routing_policy": [],
                      "health_check_id": "",
                      "id": "Z0FAKE1D_fake_app-dev.fake_domain.amazon.byu.edu._AAAA",
                      "latency_routing_policy": [],
                      "multivalue_answer_routing_policy": null,
                      "name": "fake_app-dev.fake_domain.amazon.byu.edu",
                      "records": [],
                      "set_identifier": "",
                      "ttl": 0,
                      "type": "AAAA",
                      "weighted_routing_policy": [],
                      "zone_id": "Z0FAKE1D"
                    },
                    "depends_on": [
                      "module.app.module.fargate.aws_alb.alb",
                      "module.app.module.fargate.aws_security_group.alb-sg"
                    ]
                  },
                  {
                    "address": "aws_security_group.alb-sg",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "alb-sg",
                    "provider_name": "aws",
                    "schema_version": 1,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
                      "description": "Controls access to the fake_app-dev-alb",
                      "egress": [
                        {
                          "cidr_blocks": [
                            "0.0.0.0/0"
                          ],
                          "description": "",
                          "from_port": 0,
                          "ipv6_cidr_blocks": [],
                          "prefix_list_ids": [],
                          "protocol": "-1",
                          "security_groups": [],
                          "self": false,
                          "to_port": 0
                        }
                      ],
                      "id": "sg-0fake1d",
                      "ingress": [
                        {
                          "cidr_blocks": [
                            "0.0.0.0/0"
                          ],
                          "description": "",
                          "from_port": 443,
                          "ipv6_cidr_blocks": [],
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_groups": [],
                          "self": false,
                          "to_port": 443
                        },
                        {
                          "cidr_blocks": [
                            "0.0.0.0/0"
                          ],
                          "description": "",
                          "from_port": 80,
                          "ipv6_cidr_blocks": [],
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_groups": [],
                          "self": false,
                          "to_port": 80
                        }
                      ],
                      "name": "fake_app-dev-alb-sg",
                      "name_prefix": null,
                      "owner_id": "***",
                      "revoke_rules_on_delete": false,
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "timeouts": null,
                      "vpc_id": "vpc-0fake1d"
                    }
                  },
                  {
                    "address": "aws_security_group.fargate_service_sg",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "fargate_service_sg",
                    "provider_name": "aws",
                    "schema_version": 1,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
                      "description": "Controls access to the Fargate Service",
                      "egress": [
                        {
                          "cidr_blocks": [
                            "0.0.0.0/0"
                          ],
                          "description": "",
                          "from_port": 0,
                          "ipv6_cidr_blocks": [],
                          "prefix_list_ids": [],
                          "protocol": "-1",
                          "security_groups": [],
                          "self": false,
                          "to_port": 0
                        }
                      ],
                      "id": "sg-0fake1d",
                      "ingress": [
                        {
                          "cidr_blocks": [],
                          "description": "",
                          "from_port": 0,
                          "ipv6_cidr_blocks": [],
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_groups": [
                            "sg-0fake1d"
                          ],
                          "self": false,
                          "to_port": 65535
                        }
                      ],
                      "name": "fake_app-dev-fargate-sg",
                      "name_prefix": null,
                      "owner_id": "***",
                      "revoke_rules_on_delete": false,
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "timeouts": null,
                      "vpc_id": "vpc-0fake1d"
                    },
                    "depends_on": [
                      "module.app.module.fargate.aws_security_group.alb-sg"
                    ]
                  },
                  {
                    "address": "data.aws_caller_identity.current",
                    "mode": "data",
                    "type": "aws_caller_identity",
                    "name": "current",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "account_id": "***",
                      "arn": "arn:aws:iam::***:user/GitHub-Actions",
                      "id": "2020-06-24 19:40:09.549125511 +0000 UTC",
                      "user_id": "AIDAQKWMX5RQAORNHGM6C"
                    }
                  },
                  {
                    "address": "data.aws_iam_policy_document.secrets_access",
                    "mode": "data",
                    "type": "aws_iam_policy_document",
                    "name": "secrets_access",
                    "index": 0,
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "id": "1265143845",
                      "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssm:GetParemetersByPath\",\n        \"ssm:GetParameters\",\n        \"ssm:GetParameter\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username\",\n        \"arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password\"\n      ]\n    }\n  ]\n}",
                      "override_json": null,
                      "policy_id": null,
                      "source_json": null,
                      "statement": [
                        {
                          "actions": [
                            "ssm:GetParameter",
                            "ssm:GetParameters",
                            "ssm:GetParemetersByPath"
                          ],
                          "condition": [],
                          "effect": "Allow",
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [],
                          "resources": [
                            "arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password",
                            "arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username"
                          ],
                          "sid": ""
                        }
                      ],
                      "version": "2012-10-17"
                    }
                  },
                  {
                    "address": "data.aws_iam_policy_document.task_execution_policy",
                    "mode": "data",
                    "type": "aws_iam_policy_document",
                    "name": "task_execution_policy",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "id": "320642683",
                      "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ecs-tasks.amazonaws.com\"\n      }\n    }\n  ]\n}",
                      "override_json": null,
                      "policy_id": null,
                      "source_json": null,
                      "statement": [
                        {
                          "actions": [
                            "sts:AssumeRole"
                          ],
                          "condition": [],
                          "effect": "Allow",
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [
                            {
                              "identifiers": [
                                "ecs-tasks.amazonaws.com"
                              ],
                              "type": "Service"
                            }
                          ],
                          "resources": [],
                          "sid": ""
                        }
                      ],
                      "version": "2012-10-17"
                    }
                  },
                  {
                    "address": "data.aws_iam_policy_document.task_policy",
                    "mode": "data",
                    "type": "aws_iam_policy_document",
                    "name": "task_policy",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "id": "320642683",
                      "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ecs-tasks.amazonaws.com\"\n      }\n    }\n  ]\n}",
                      "override_json": null,
                      "policy_id": null,
                      "source_json": null,
                      "statement": [
                        {
                          "actions": [
                            "sts:AssumeRole"
                          ],
                          "condition": [],
                          "effect": "Allow",
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [
                            {
                              "identifiers": [
                                "ecs-tasks.amazonaws.com"
                              ],
                              "type": "Service"
                            }
                          ],
                          "resources": [],
                          "sid": ""
                        }
                      ],
                      "version": "2012-10-17"
                    }
                  },
                  {
                    "address": "data.aws_region.current",
                    "mode": "data",
                    "type": "aws_region",
                    "name": "current",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "current": null,
                      "description": "US West (Oregon)",
                      "endpoint": "ec2.us-west-2.amazonaws.com",
                      "id": "us-west-2",
                      "name": "us-west-2"
                    }
                  }
                ],
                "address": "module.app.module.fargate"
              },
              {
                "resources": [
                  {
                    "address": "aws_db_instance.database",
                    "mode": "managed",
                    "type": "aws_db_instance",
                    "name": "database",
                    "provider_name": "aws",
                    "schema_version": 1,
                    "values": {
                      "address": "fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com",
                      "allocated_storage": 32,
                      "allow_major_version_upgrade": null,
                      "apply_immediately": null,
                      "arn": "arn:aws:rds:us-west-2:***:db:fake_app-dev-db",
                      "auto_minor_version_upgrade": true,
                      "availability_zone": "us-west-2b",
                      "backup_retention_period": 7,
                      "backup_window": "07:01-07:31",
                      "ca_cert_identifier": "rds-ca-2019",
                      "character_set_name": null,
                      "copy_tags_to_snapshot": true,
                      "db_subnet_group_name": "oit-oregon-dev-db-subnet-group",
                      "delete_automated_backups": true,
                      "deletion_protection": true,
                      "domain": "",
                      "domain_iam_role_name": "",
                      "enabled_cloudwatch_logs_exports": [
                        "error",
                        "general",
                        "slowquery"
                      ],
                      "endpoint": "fake_app-dev-db.0fake1d.us-west-2.rds.amazonaws.com:3306",
                      "engine": "mysql",
                      "engine_version": "8.0.11",
                      "final_snapshot_identifier": "fake_app-dev-db-final-snapshot",
                      "hosted_zone_id": "ZFAKE1D",
                      "iam_database_authentication_enabled": false,
                      "id": "fake_app-dev-db",
                      "identifier": "fake_app-dev-db",
                      "identifier_prefix": null,
                      "instance_class": "db.t2.small",
                      "iops": 0,
                      "kms_key_id": "arn:aws:kms:us-west-2:***:key/cfake1d",
                      "license_model": "general-public-license",
                      "maintenance_window": "thu:11:33-thu:12:03",
                      "max_allocated_storage": 0,
                      "monitoring_interval": 0,
                      "monitoring_role_arn": "",
                      "multi_az": false,
                      "name": "deleteme2dev",
                      "option_group_name": "default:mysql-8-0",
                      "parameter_group_name": "default.mysql8.0",
                      "password": "*******",
                      "performance_insights_enabled": false,
                      "performance_insights_kms_key_id": "",
                      "performance_insights_retention_period": 0,
                      "port": 3306,
                      "publicly_accessible": false,
                      "replicas": [],
                      "replicate_source_db": "",
                      "resource_id": "db-FAKE1D",
                      "s3_import": [],
                      "security_group_names": [],
                      "skip_final_snapshot": true,
                      "snapshot_identifier": null,
                      "status": "available",
                      "storage_encrypted": true,
                      "storage_type": "gp2",
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "timeouts": null,
                      "timezone": "",
                      "username": "*******",
                      "vpc_security_group_ids": [
                        "sg-0fake1d"
                      ]
                    },
                    "depends_on": [
                      "module.app.module.database.aws_security_group.db_security_group",
                      "module.app.module.database.aws_ssm_parameter.master_password",
                      "module.app.module.database.aws_ssm_parameter.master_username",
                      "module.app.module.database.random_password.default"
                    ]
                  },
                  {
                    "address": "aws_security_group.db_security_group",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "db_security_group",
                    "provider_name": "aws",
                    "schema_version": 1,
                    "values": {
                      "arn": "arn:aws:ec2:us-west-2:***:security-group/sg-0fake1d",
                      "description": "Security group for fake_app-dev-db RDS instance",
                      "egress": [],
                      "id": "sg-0fake1d",
                      "ingress": [
                        {
                          "cidr_blocks": [],
                          "description": "",
                          "from_port": 3306,
                          "ipv6_cidr_blocks": [],
                          "prefix_list_ids": [],
                          "protocol": "tcp",
                          "security_groups": [
                            "sg-0fake1d"
                          ],
                          "self": false,
                          "to_port": 3306
                        }
                      ],
                      "name": "fake_app-dev-db-db_sg",
                      "name_prefix": null,
                      "owner_id": "***",
                      "revoke_rules_on_delete": false,
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "timeouts": null,
                      "vpc_id": "vpc-0fake1d"
                    }
                  },
                  {
                    "address": "aws_ssm_parameter.master_password",
                    "mode": "managed",
                    "type": "aws_ssm_parameter",
                    "name": "master_password",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "allowed_pattern": "",
                      "arn": "arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_password",
                      "description": "fake_app-dev-db Database master password",
                      "id": "/fake_app-dev-db/master_password",
                      "key_id": "alias/aws/ssm",
                      "name": "/fake_app-dev-db/master_password",
                      "overwrite": null,
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "tier": "Standard",
                      "type": "SecureString",
                      "value": "*******",
                      "version": 1
                    },
                    "depends_on": [
                      "module.app.module.database.random_password.default"
                    ]
                  },
                  {
                    "address": "aws_ssm_parameter.master_username",
                    "mode": "managed",
                    "type": "aws_ssm_parameter",
                    "name": "master_username",
                    "provider_name": "aws",
                    "schema_version": 0,
                    "values": {
                      "allowed_pattern": "",
                      "arn": "arn:aws:ssm:us-west-2:***:parameter/fake_app-dev-db/master_username",
                      "description": "fake_app-dev-db Database master username",
                      "id": "/fake_app-dev-db/master_username",
                      "key_id": "",
                      "name": "/fake_app-dev-db/master_username",
                      "overwrite": null,
                      "tags": {
                        "app": "fake_app-dev",
                        "data-sensitivity": "confidential",
                        "repo": "https://github.com/byu-oit/fake_app",
                        "team": "FAKE_TEAM"
                      },
                      "tier": "Standard",
                      "type": "String",
                      "value": "*****",
                      "version": 1
                    }
                  },
                  {
                    "address": "random_password.default",
                    "mode": "managed",
                    "type": "random_password",
                    "name": "default",
                    "index": 0,
                    "provider_name": "random",
                    "schema_version": 0,
                    "values": {
                      "id": "none",
                      "keepers": {
                        "recreate_password": "false"
                      },
                      "length": 32,
                      "lower": true,
                      "min_lower": 0,
                      "min_numeric": 0,
                      "min_special": 0,
                      "min_upper": 0,
                      "number": true,
                      "override_special": null,
                      "result": "*******",
                      "special": false,
                      "upper": true
                    }
                  }
                ],
                "address": "module.app.module.database"
              }
            ]
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "app.acs:aws.virginia": {
        "name": "aws",
        "alias": "virginia",
        "module_address": "app.acs",
        "expressions": {
          "region": {
            "constant_value": "us-east-1"
          }
        }
      },
      "aws": {
        "name": "aws",
        "version_constraint": "~\u003e 2.42",
        "expressions": {
          "region": {
            "constant_value": "us-west-2"
          }
        }
      }
    },
    "*******_module": {
      "outputs": {
        "codedeploy_app_name": {
          "expression": {
            "references": [
              "module.app.codedeploy_app_name"
            ]
          }
        },
        "codedeploy_appspec_json_file": {
          "expression": {
            "references": [
              "module.app.codedeploy_appspec_json_file"
            ]
          }
        },
        "codedeploy_deployment_group_name": {
          "expression": {
            "references": [
              "module.app.codedeploy_deployment_group_name"
            ]
          }
        }
      },
      "module_calls": {
        "app": {
          "source": "../../modules/app",
          "expressions": {
            "app_name": {
              "constant_value": "fake_app"
            },
            "autoscaling_config": {
              "constant_value": null
            },
            "codedeploy_termination_wait_time": {
              "constant_value": 1
            },
            "db_allocated_storage": {
              "constant_value": 32
            },
            "db_instance_class": {
              "constant_value": "db.t2.small"
            },
            "env": {
              "constant_value": "dev"
            },
            "image_tag": {
              "references": [
                "var.image_tag"
              ]
            }
          },
          "module": {
            "outputs": {
              "codedeploy_app_name": {
                "expression": {
                  "references": [
                    "module.fargate.codedeploy_deployment_group"
                  ]
                }
              },
              "codedeploy_appspec_json_file": {
                "expression": {
                  "references": [
                    "module.fargate.codedeploy_appspec_json_file"
                  ]
                }
              },
              "codedeploy_deployment_group_name": {
                "expression": {
                  "references": [
                    "module.fargate.codedeploy_deployment_group"
                  ]
                }
              }
            },
            "resources": [
              {
                "address": "aws_security_group_rule.db_access",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "db_access",
                "provider_config_key": "app:aws",
                "expressions": {
                  "from_port": {
                    "constant_value": 3306
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "module.database.security_group"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "module.fargate.fargate_service_security_group"
                    ]
                  },
                  "to_port": {
                    "constant_value": 3306
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2
              },
              {
                "address": "data.aws_ecr_repository.ecr_repo",
                "mode": "data",
                "type": "aws_ecr_repository",
                "name": "ecr_repo",
                "provider_config_key": "app:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.app_name"
                    ]
                  }
                },
                "schema_version": 0
              }
            ],
            "module_calls": {
              "acs": {
                "source": "github.com/byu-oit/terraform-aws-acs-info.git?ref=v2.0.0",
                "module": {
                  "outputs": {
                    "certificate": {
                      "expression": {
                        "references": [
                          "local.zone_id",
                          "data.aws_acm_certificate.cert[0]"
                        ]
                      }
                    },
                    "certificate_virginia": {
                      "expression": {
                        "references": [
                          "local.zone_id",
                          "data.aws_acm_certificate.virginia[0]"
                        ]
                      }
                    },
                    "data_subnet_ids": {
                      "expression": {
                        "references": [
                          "local.data_a_subnet_id",
                          "data.aws_subnet.data_a[0]",
                          "data.aws_subnet.data_b[0]"
                        ]
                      }
                    },
                    "data_subnets": {
                      "expression": {
                        "references": [
                          "local.data_a_subnet_id",
                          "data.aws_subnet.data_a[0]",
                          "data.aws_subnet.data_b[0]"
                        ]
                      }
                    },
                    "db_subnet_group_name": {
                      "expression": {
                        "references": [
                          "local.vpc_name"
                        ]
                      }
                    },
                    "github_token": {
                      "expression": {
                        "references": [
                          "local.github_token"
                        ]
                      }
                    },
                    "oracle_security_group": {
                      "expression": {
                        "references": [
                          "local.oracle_security_group_id",
                          "data.aws_security_group.oracle[0]"
                        ]
                      }
                    },
                    "power_builder_role": {
                      "expression": {
                        "references": [
                          "data.aws_iam_role.power_builder"
                        ]
                      }
                    },
                    "power_user_role": {
                      "expression": {
                        "references": [
                          "data.aws_iam_role.power_user"
                        ]
                      }
                    },
                    "private_subnet_ids": {
                      "expression": {
                        "references": [
                          "local.private_a_subnet_id",
                          "data.aws_subnet.private_a[0]",
                          "data.aws_subnet.private_b[0]"
                        ]
                      }
                    },
                    "private_subnets": {
                      "expression": {
                        "references": [
                          "local.private_a_subnet_id",
                          "data.aws_subnet.private_a[0]",
                          "data.aws_subnet.private_b[0]"
                        ]
                      }
                    },
                    "public_subnet_ids": {
                      "expression": {
                        "references": [
                          "local.public_a_subnet_id",
                          "data.aws_subnet.public_a[0]",
                          "data.aws_subnet.public_b[0]"
                        ]
                      }
                    },
                    "public_subnets": {
                      "expression": {
                        "references": [
                          "local.public_a_subnet_id",
                          "data.aws_subnet.public_a[0]",
                          "data.aws_subnet.public_b[0]"
                        ]
                      }
                    },
                    "rds_security_group": {
                      "expression": {
                        "references": [
                          "data.aws_security_group.rds"
                        ]
                      }
                    },
                    "role_permissions_boundary": {
                      "expression": {
                        "references": [
                          "local.role_permission_boundary_arn",
                          "data.aws_iam_policy.role_permission_boundary[0]"
                        ]
                      }
                    },
                    "route53_zone": {
                      "expression": {
                        "references": [
                          "local.zone_id",
                          "data.aws_route53_zone.zone[0]"
                        ]
                      }
                    },
                    "ssh_rdp_security_group": {
                      "expression": {
                        "references": [
                          "data.aws_security_group.ssh_rdp"
                        ]
                      }
                    },
                    "user_permissions_boundary": {
                      "expression": {
                        "references": [
                          "local.user_permission_boundary_arn",
                          "data.aws_iam_policy.user_permission_boundary[0]"
                        ]
                      }
                    },
                    "vpc": {
                      "expression": {
                        "references": [
                          "data.aws_vpc.vpc"
                        ]
                      }
                    }
                  },
                  "resources": [
                    {
                      "address": "data.aws_acm_certificate.cert",
                      "mode": "data",
                      "type": "aws_acm_certificate",
                      "name": "cert",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "domain": {
                          "references": [
                            "data.aws_route53_zone.zone[0]"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.zone_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_acm_certificate.virginia",
                      "mode": "data",
                      "type": "aws_acm_certificate",
                      "name": "virginia",
                      "provider_config_key": "acs:aws.virginia",
                      "expressions": {
                        "domain": {
                          "references": [
                            "data.aws_route53_zone.zone[0]"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.zone_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_iam_account_alias.current",
                      "mode": "data",
                      "type": "aws_iam_account_alias",
                      "name": "current",
                      "provider_config_key": "acs:aws",
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_iam_policy.role_permission_boundary",
                      "mode": "data",
                      "type": "aws_iam_policy",
                      "name": "role_permission_boundary",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "arn": {
                          "references": [
                            "local.role_permission_boundary_arn"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.role_permission_boundary_arn"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_iam_policy.user_permission_boundary",
                      "mode": "data",
                      "type": "aws_iam_policy",
                      "name": "user_permission_boundary",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "arn": {
                          "references": [
                            "local.user_permission_boundary_arn"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.user_permission_boundary_arn"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_iam_role.power_builder",
                      "mode": "data",
                      "type": "aws_iam_role",
                      "name": "power_builder",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "name": {
                          "constant_value": "PowerBuilder"
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_iam_role.power_user",
                      "mode": "data",
                      "type": "aws_iam_role",
                      "name": "power_user",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "name": {
                          "constant_value": "PowerUser"
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_iam_role.read_only",
                      "mode": "data",
                      "type": "aws_iam_role",
                      "name": "read_only",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "name": {
                          "constant_value": "ReadOnly"
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_region.current",
                      "mode": "data",
                      "type": "aws_region",
                      "name": "current",
                      "provider_config_key": "acs:aws",
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_route53_zone.zone",
                      "mode": "data",
                      "type": "aws_route53_zone",
                      "name": "zone",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "zone_id": {
                          "references": [
                            "local.zone_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.zone_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_security_group.oracle",
                      "mode": "data",
                      "type": "aws_security_group",
                      "name": "oracle",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "id": {
                          "references": [
                            "local.oracle_security_group_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.oracle_security_group_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_security_group.rds",
                      "mode": "data",
                      "type": "aws_security_group",
                      "name": "rds",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "filter": [
                          {
                            "name": {
                              "constant_value": "vpc-id"
                            },
                            "values": {
                              "references": [
                                "data.aws_vpc.vpc"
                              ]
                            }
                          },
                          {
                            "name": {
                              "constant_value": "group-name"
                            },
                            "values": {
                              "constant_value": [
                                "*rds_security_group*"
                              ]
                            }
                          }
                        ]
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_security_group.ssh_rdp",
                      "mode": "data",
                      "type": "aws_security_group",
                      "name": "ssh_rdp",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "filter": [
                          {
                            "name": {
                              "constant_value": "vpc-id"
                            },
                            "values": {
                              "references": [
                                "data.aws_vpc.vpc"
                              ]
                            }
                          },
                          {
                            "name": {
                              "constant_value": "group-name"
                            },
                            "values": {
                              "constant_value": [
                                "*ssh_rdp*"
                              ]
                            }
                          }
                        ]
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_ssm_parameter.acs_parameters",
                      "mode": "data",
                      "type": "aws_ssm_parameter",
                      "name": "acs_parameters",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "name": {
                          "constant_value": "acsParameters"
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_subnet.data_a",
                      "mode": "data",
                      "type": "aws_subnet",
                      "name": "data_a",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "id": {
                          "references": [
                            "local.data_a_subnet_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.data_a_subnet_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_subnet.data_b",
                      "mode": "data",
                      "type": "aws_subnet",
                      "name": "data_b",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "id": {
                          "references": [
                            "local.data_b_subnet_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.data_b_subnet_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_subnet.private_a",
                      "mode": "data",
                      "type": "aws_subnet",
                      "name": "private_a",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "id": {
                          "references": [
                            "local.private_a_subnet_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.private_a_subnet_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_subnet.private_b",
                      "mode": "data",
                      "type": "aws_subnet",
                      "name": "private_b",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "id": {
                          "references": [
                            "local.private_b_subnet_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.private_b_subnet_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_subnet.public_a",
                      "mode": "data",
                      "type": "aws_subnet",
                      "name": "public_a",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "id": {
                          "references": [
                            "local.public_a_subnet_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.public_a_subnet_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_subnet.public_b",
                      "mode": "data",
                      "type": "aws_subnet",
                      "name": "public_b",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "id": {
                          "references": [
                            "local.public_b_subnet_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.public_b_subnet_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_vpc.vpc",
                      "mode": "data",
                      "type": "aws_vpc",
                      "name": "vpc",
                      "provider_config_key": "acs:aws",
                      "expressions": {
                        "tags": {
                          "references": [
                            "local.vpc_name"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "vpc_vpn_to_campus": {
                      "default": false,
                      "description": "Retrieve VPC info for the VPC that has VPN access to campus (defaults to false)."
                    }
                  }
                }
              },
              "database": {
                "source": "github.com/byu-oit/terraform-aws-rds?ref=v0.3.0",
                "expressions": {
                  "allocated_storage": {
                    "references": [
                      "var.db_allocated_storage"
                    ]
                  },
                  "cloudwatch_logs_exports": {
                    "constant_value": [
                      "error",
                      "general",
                      "slowquery"
                    ]
                  },
                  "db_name": {
                    "references": [
                      "local.app_name"
                    ]
                  },
                  "deletion_protection": {
                    "constant_value": true
                  },
                  "engine": {
                    "constant_value": "mysql"
                  },
                  "engine_version": {
                    "constant_value": "8.0"
                  },
                  "identifier": {
                    "references": [
                      "local.app_name"
                    ]
                  },
                  "instance_class": {
                    "references": [
                      "var.db_instance_class"
                    ]
                  },
                  "master_username": {
                    "constant_value": "*******"
                  },
                  "skip_final_snapshot": {
                    "constant_value": true
                  },
                  "storage_encrypted": {
                    "constant_value": true
                  },
                  "subnet_group_name": {
                    "references": [
                      "module.acs.db_subnet_group_name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "module.acs.data_subnet_ids"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.default_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "module.acs.vpc"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "instance": {
                      "expression": {
                        "references": [
                          "aws_db_instance.database"
                        ]
                      }
                    },
                    "master_password_parameter": {
                      "sensitive": true,
                      "expression": {
                        "references": [
                          "aws_ssm_parameter.master_password"
                        ]
                      }
                    },
                    "master_username_parameter": {
                      "expression": {
                        "references": [
                          "aws_ssm_parameter.master_username"
                        ]
                      }
                    },
                    "security_group": {
                      "expression": {
                        "references": [
                          "aws_security_group.db_security_group"
                        ]
                      }
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_db_instance.database",
                      "mode": "managed",
                      "type": "aws_db_instance",
                      "name": "database",
                      "provider_config_key": "database:aws",
                      "expressions": {
                        "allocated_storage": {
                          "references": [
                            "var.allocated_storage"
                          ]
                        },
                        "backup_retention_period": {
                          "references": [
                            "var.backup_retention_period"
                          ]
                        },
                        "backup_window": {
                          "references": [
                            "var.backup_window"
                          ]
                        },
                        "copy_tags_to_snapshot": {
                          "constant_value": true
                        },
                        "db_subnet_group_name": {
                          "references": [
                            "var.subnet_group_name"
                          ]
                        },
                        "deletion_protection": {
                          "references": [
                            "var.deletion_protection"
                          ]
                        },
                        "enabled_cloudwatch_logs_exports": {
                          "references": [
                            "var.cloudwatch_logs_exports"
                          ]
                        },
                        "engine": {
                          "references": [
                            "var.engine"
                          ]
                        },
                        "engine_version": {
                          "references": [
                            "var.engine_version"
                          ]
                        },
                        "final_snapshot_identifier": {
                          "references": [
                            "var.identifier"
                          ]
                        },
                        "identifier": {
                          "references": [
                            "var.identifier"
                          ]
                        },
                        "instance_class": {
                          "references": [
                            "var.instance_class"
                          ]
                        },
                        "maintenance_window": {
                          "references": [
                            "var.maintenance_window"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.db_name"
                          ]
                        },
                        "password": {
                          "references": [
                            "var.master_password",
                            "var.master_password",
                            "aws_ssm_parameter.master_password"
                          ]
                        },
                        "skip_final_snapshot": {
                          "references": [
                            "var.skip_final_snapshot"
                          ]
                        },
                        "storage_encrypted": {
                          "references": [
                            "var.storage_encrypted"
                          ]
                        },
                        "storage_type": {
                          "references": [
                            "var.storage_type"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "username": {
                          "references": [
                            "var.master_username",
                            "var.master_username",
                            "aws_ssm_parameter.master_username"
                          ]
                        },
                        "vpc_security_group_ids": {
                          "references": [
                            "aws_security_group.db_security_group"
                          ]
                        }
                      },
                      "schema_version": 1
                    },
                    {
                      "address": "aws_security_group.db_security_group",
                      "mode": "managed",
                      "type": "aws_security_group",
                      "name": "db_security_group",
                      "provider_config_key": "database:aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "var.identifier"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.identifier"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "var.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1
                    },
                    {
                      "address": "aws_ssm_parameter.master_password",
                      "mode": "managed",
                      "type": "aws_ssm_parameter",
                      "name": "master_password",
                      "provider_config_key": "database:aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "var.identifier"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.identifier"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "type": {
                          "constant_value": "SecureString"
                        },
                        "value": {
                          "references": [
                            "var.master_password",
                            "var.master_password",
                            "random_password.default[0]"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_ssm_parameter.master_username",
                      "mode": "managed",
                      "type": "aws_ssm_parameter",
                      "name": "master_username",
                      "provider_config_key": "database:aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "var.identifier"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.identifier"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "type": {
                          "constant_value": "String"
                        },
                        "value": {
                          "references": [
                            "var.master_username",
                            "var.master_username",
                            "var.identifier"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "random_password.default",
                      "mode": "managed",
                      "type": "random_password",
                      "name": "default",
                      "provider_config_key": "database:random",
                      "expressions": {
                        "keepers": {
                          "constant_value": {
                            "recreate_password": false
                          }
                        },
                        "length": {
                          "constant_value": 32
                        },
                        "special": {
                          "constant_value": false
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.master_password"
                        ]
                      }
                    }
                  ],
                  "variables": {
                    "allocated_storage": {
                      "default": 32,
                      "description": "The amount of storage to be allocated for the database"
                    },
                    "backup_retention_period": {
                      "default": 7,
                      "description": "The days to retain backups for. Must be between 0 and 35. Must be greater than 0 if the database is used as a source for a Read Replica."
                    },
                    "backup_window": {
                      "default": "07:01-07:31",
                      "description": "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: \"09:46-10:16\". Must not overlap with maintenance_window."
                    },
                    "cloudwatch_logs_exports": {
                      "default": [
                        "audit",
                        "error",
                        "general",
                        "slowquery"
                      ],
                      "description": "List of log types to enable for exporting to CloudWatch logs. Each engine has different valid values. Defaults to mysql ['audit', 'error', 'general', 'slowquery']"
                    },
                    "db_name": {
                      "default": null,
                      "description": "The name for a database to be created in the RDS instance."
                    },
                    "deletion_protection": {
                      "default": true,
                      "description": "If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to true. The default is true"
                    },
                    "engine": {
                      "description": "The engine to be used for the database"
                    },
                    "engine_version": {
                      "description": "The engine version to use."
                    },
                    "identifier": {
                      "description": "Identifier for the DB Instance"
                    },
                    "instance_class": {
                      "default": "db.t2.small",
                      "description": "The instance type to use for the database"
                    },
                    "maintenance_window": {
                      "default": null,
                      "description": "The window to perform maintenance in. Syntax: \"ddd:hh24:mi-ddd:hh24:mi\". Eg: \"Mon:00:00-Mon:03:00\"."
                    },
                    "master_password": {
                      "default": null,
                      "description": "Password for the master username"
                    },
                    "master_username": {
                      "default": null,
                      "description": "Master username for the database instance."
                    },
                    "skip_final_snapshot": {
                      "default": false,
                      "description": "If true, skips final snapshot on destroy."
                    },
                    "storage_encrypted": {
                      "default": true,
                      "description": "Specifies whether the DB instance is encrypted. Defaults to true."
                    },
                    "storage_type": {
                      "default": "gp2",
                      "description": "Storage type for the database. 'standard' (magnetic) or 'gp2' (general purpose SSD). Defaults to gp2"
                    },
                    "subnet_group_name": {
                      "description": "Subnet group name"
                    },
                    "subnet_ids": {
                      "description": "A list of VPC subnet IDs to put the RDS instance on."
                    },
                    "tags": {
                      "default": {},
                      "description": "A map of AWS Tags to attach to each resource created"
                    },
                    "vpc_id": {
                      "description": "VPC ID to put the RDS instance on."
                    }
                  }
                }
              },
              "fargate": {
                "source": "github.com/byu-oit/terraform-aws-fargate-api?ref=v2.1.0",
                "expressions": {
                  "app_name": {
                    "references": [
                      "local.app_name"
                    ]
                  },
                  "autoscaling_config": {
                    "references": [
                      "var.autoscaling_config"
                    ]
                  },
                  "codedeploy_service_role_arn": {
                    "references": [
                      "module.acs.power_builder_role"
                    ]
                  },
                  "codedeploy_termination_wait_time": {
                    "references": [
                      "var.codedeploy_termination_wait_time"
                    ]
                  },
                  "container_port": {
                    "constant_value": 8080
                  },
                  "health_check_path": {
                    "constant_value": "/health"
                  },
                  "hosted_zone": {
                    "references": [
                      "module.acs.route53_zone"
                    ]
                  },
                  "https_certificate_arn": {
                    "references": [
                      "module.acs.certificate"
                    ]
                  },
                  "primary_container_definition": {
                    "references": [
                      "data.aws_ecr_repository.ecr_repo",
                      "var.image_tag",
                      "var.env",
                      "module.database.instance",
                      "module.database.instance",
                      "module.database.master_username_parameter",
                      "module.database.master_password_parameter"
                    ]
                  },
                  "private_subnet_ids": {
                    "references": [
                      "module.acs.private_subnet_ids"
                    ]
                  },
                  "public_subnet_ids": {
                    "references": [
                      "module.acs.public_subnet_ids"
                    ]
                  },
                  "role_permissions_boundary_arn": {
                    "references": [
                      "module.acs.role_permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.default_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "module.acs.vpc"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "alb": {
                      "expression": {
                        "references": [
                          "aws_alb.alb"
                        ]
                      }
                    },
                    "alb_security_group": {
                      "expression": {
                        "references": [
                          "aws_security_group.alb-sg"
                        ]
                      }
                    },
                    "autoscaling_step_down_policy": {
                      "expression": {
                        "references": [
                          "var.autoscaling_config",
                          "aws_appautoscaling_policy.down"
                        ]
                      }
                    },
                    "autoscaling_step_up_policy": {
                      "expression": {
                        "references": [
                          "var.autoscaling_config",
                          "aws_appautoscaling_policy.up"
                        ]
                      }
                    },
                    "cloudwatch_log_group": {
                      "expression": {
                        "references": [
                          "aws_cloudwatch_log_group.container_log_group"
                        ]
                      }
                    },
                    "codedeploy_appspec_json_file": {
                      "expression": {
                        "references": [
                          "local_file.appspec_json"
                        ]
                      }
                    },
                    "codedeploy_deployment_group": {
                      "expression": {
                        "references": [
                          "aws_codedeploy_deployment_group.deploymentgroup"
                        ]
                      }
                    },
                    "dns_record": {
                      "expression": {
                        "references": [
                          "aws_route53_record.a_record"
                        ]
                      }
                    },
                    "fargate_service": {
                      "expression": {
                        "references": [
                          "aws_ecs_service.service"
                        ]
                      }
                    },
                    "fargate_service_security_group": {
                      "expression": {
                        "references": [
                          "aws_security_group.fargate_service_sg"
                        ]
                      }
                    },
                    "task_definition": {
                      "expression": {
                        "references": [
                          "aws_ecs_task_definition.task_def"
                        ]
                      }
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_alb.alb",
                      "mode": "managed",
                      "type": "aws_alb",
                      "name": "alb",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "name": {
                          "references": [
                            "local.alb_name"
                          ]
                        },
                        "security_groups": {
                          "references": [
                            "aws_security_group.alb-sg"
                          ]
                        },
                        "subnets": {
                          "references": [
                            "var.public_subnet_ids"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_alb_listener.http_to_https",
                      "mode": "managed",
                      "type": "aws_alb_listener",
                      "name": "http_to_https",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "default_action": [
                          {
                            "redirect": [
                              {
                                "port": {
                                  "references": [
                                    "aws_alb_listener.https"
                                  ]
                                },
                                "protocol": {
                                  "references": [
                                    "aws_alb_listener.https"
                                  ]
                                },
                                "status_code": {
                                  "constant_value": "HTTP_301"
                                }
                              }
                            ],
                            "type": {
                              "constant_value": "redirect"
                            }
                          }
                        ],
                        "load_balancer_arn": {
                          "references": [
                            "aws_alb.alb"
                          ]
                        },
                        "port": {
                          "constant_value": 80
                        },
                        "protocol": {
                          "constant_value": "HTTP"
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_alb_listener.https",
                      "mode": "managed",
                      "type": "aws_alb_listener",
                      "name": "https",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "certificate_arn": {
                          "references": [
                            "var.https_certificate_arn"
                          ]
                        },
                        "default_action": [
                          {
                            "target_group_arn": {
                              "references": [
                                "aws_alb_target_group.blue"
                              ]
                            },
                            "type": {
                              "constant_value": "forward"
                            }
                          }
                        ],
                        "load_balancer_arn": {
                          "references": [
                            "aws_alb.alb"
                          ]
                        },
                        "port": {
                          "constant_value": 443
                        },
                        "protocol": {
                          "constant_value": "HTTPS"
                        }
                      },
                      "schema_version": 0,
                      "depends_on": [
                        "aws_alb_target_group.blue",
                        "aws_alb_target_group.green"
                      ]
                    },
                    {
                      "address": "aws_alb_listener.test_listener",
                      "mode": "managed",
                      "type": "aws_alb_listener",
                      "name": "test_listener",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "certificate_arn": {
                          "references": [
                            "var.https_certificate_arn"
                          ]
                        },
                        "default_action": [
                          {
                            "target_group_arn": {
                              "references": [
                                "aws_alb_target_group.blue"
                              ]
                            },
                            "type": {
                              "constant_value": "forward"
                            }
                          }
                        ],
                        "load_balancer_arn": {
                          "references": [
                            "aws_alb.alb"
                          ]
                        },
                        "port": {
                          "references": [
                            "var.codedeploy_test_listener_port"
                          ]
                        },
                        "protocol": {
                          "constant_value": "HTTPS"
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.codedeploy_test_listener_port"
                        ]
                      },
                      "depends_on": [
                        "aws_alb_target_group.blue",
                        "aws_alb_target_group.green"
                      ]
                    },
                    {
                      "address": "aws_alb_target_group.blue",
                      "mode": "managed",
                      "type": "aws_alb_target_group",
                      "name": "blue",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "deregistration_delay": {
                          "references": [
                            "var.target_group_deregistration_delay"
                          ]
                        },
                        "health_check": [
                          {
                            "healthy_threshold": {
                              "references": [
                                "var.health_check_healthy_threshold"
                              ]
                            },
                            "interval": {
                              "references": [
                                "var.health_check_interval"
                              ]
                            },
                            "path": {
                              "references": [
                                "var.health_check_path"
                              ]
                            },
                            "timeout": {
                              "references": [
                                "var.health_check_timeout"
                              ]
                            },
                            "unhealthy_threshold": {
                              "references": [
                                "var.health_check_unhealthy_threshold"
                              ]
                            }
                          }
                        ],
                        "load_balancing_algorithm_type": {
                          "constant_value": "least_outstanding_requests"
                        },
                        "name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "port": {
                          "references": [
                            "var.container_port"
                          ]
                        },
                        "protocol": {
                          "constant_value": "HTTP"
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "target_type": {
                          "constant_value": "ip"
                        },
                        "vpc_id": {
                          "references": [
                            "var.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "depends_on": [
                        "aws_alb.alb"
                      ]
                    },
                    {
                      "address": "aws_alb_target_group.green",
                      "mode": "managed",
                      "type": "aws_alb_target_group",
                      "name": "green",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "deregistration_delay": {
                          "references": [
                            "var.target_group_deregistration_delay"
                          ]
                        },
                        "health_check": [
                          {
                            "healthy_threshold": {
                              "references": [
                                "var.health_check_healthy_threshold"
                              ]
                            },
                            "interval": {
                              "references": [
                                "var.health_check_interval"
                              ]
                            },
                            "path": {
                              "references": [
                                "var.health_check_path"
                              ]
                            },
                            "timeout": {
                              "references": [
                                "var.health_check_timeout"
                              ]
                            },
                            "unhealthy_threshold": {
                              "references": [
                                "var.health_check_unhealthy_threshold"
                              ]
                            }
                          }
                        ],
                        "load_balancing_algorithm_type": {
                          "constant_value": "least_outstanding_requests"
                        },
                        "name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "port": {
                          "references": [
                            "var.container_port"
                          ]
                        },
                        "protocol": {
                          "constant_value": "HTTP"
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "target_type": {
                          "constant_value": "ip"
                        },
                        "vpc_id": {
                          "references": [
                            "var.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "depends_on": [
                        "aws_alb.alb"
                      ]
                    },
                    {
                      "address": "aws_appautoscaling_policy.down",
                      "mode": "managed",
                      "type": "aws_appautoscaling_policy",
                      "name": "down",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "resource_id": {
                          "references": [
                            "aws_appautoscaling_target.default[0]"
                          ]
                        },
                        "scalable_dimension": {
                          "references": [
                            "aws_appautoscaling_target.default[0]"
                          ]
                        },
                        "service_namespace": {
                          "references": [
                            "aws_appautoscaling_target.default[0]"
                          ]
                        },
                        "step_scaling_policy_configuration": [
                          {
                            "adjustment_type": {
                              "constant_value": "ChangeInCapacity"
                            },
                            "cooldown": {
                              "constant_value": 300
                            },
                            "metric_aggregation_type": {
                              "constant_value": "Average"
                            },
                            "step_adjustment": [
                              {
                                "metric_interval_upper_bound": {
                                  "constant_value": 0
                                },
                                "scaling_adjustment": {
                                  "constant_value": -1
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.autoscaling_config"
                        ]
                      }
                    },
                    {
                      "address": "aws_appautoscaling_policy.up",
                      "mode": "managed",
                      "type": "aws_appautoscaling_policy",
                      "name": "up",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "resource_id": {
                          "references": [
                            "aws_appautoscaling_target.default[0]"
                          ]
                        },
                        "scalable_dimension": {
                          "references": [
                            "aws_appautoscaling_target.default[0]"
                          ]
                        },
                        "service_namespace": {
                          "references": [
                            "aws_appautoscaling_target.default[0]"
                          ]
                        },
                        "step_scaling_policy_configuration": [
                          {
                            "adjustment_type": {
                              "constant_value": "ChangeInCapacity"
                            },
                            "cooldown": {
                              "constant_value": 300
                            },
                            "metric_aggregation_type": {
                              "constant_value": "Average"
                            },
                            "step_adjustment": [
                              {
                                "metric_interval_lower_bound": {
                                  "constant_value": 0
                                },
                                "scaling_adjustment": {
                                  "constant_value": 1
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.autoscaling_config"
                        ]
                      }
                    },
                    {
                      "address": "aws_appautoscaling_target.default",
                      "mode": "managed",
                      "type": "aws_appautoscaling_target",
                      "name": "default",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "max_capacity": {
                          "references": [
                            "var.autoscaling_config"
                          ]
                        },
                        "min_capacity": {
                          "references": [
                            "var.autoscaling_config"
                          ]
                        },
                        "resource_id": {
                          "references": [
                            "aws_ecs_cluster.cluster",
                            "aws_ecs_service.service"
                          ]
                        },
                        "scalable_dimension": {
                          "constant_value": "ecs:service:DesiredCount"
                        },
                        "service_namespace": {
                          "constant_value": "ecs"
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.autoscaling_config"
                        ]
                      }
                    },
                    {
                      "address": "aws_cloudwatch_log_group.container_log_group",
                      "mode": "managed",
                      "type": "aws_cloudwatch_log_group",
                      "name": "container_log_group",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "name": {
                          "references": [
                            "local.cloudwatch_log_group_name"
                          ]
                        },
                        "retention_in_days": {
                          "references": [
                            "var.log_retention_in_days"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_cloudwatch_metric_alarm.down",
                      "mode": "managed",
                      "type": "aws_cloudwatch_metric_alarm",
                      "name": "down",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "alarm_actions": {
                          "references": [
                            "aws_appautoscaling_policy.down[0]"
                          ]
                        },
                        "alarm_name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "comparison_operator": {
                          "constant_value": "LessThanThreshold"
                        },
                        "dimensions": {
                          "references": [
                            "aws_ecs_cluster.cluster",
                            "aws_ecs_service.service"
                          ]
                        },
                        "evaluation_periods": {
                          "constant_value": 5
                        },
                        "metric_name": {
                          "constant_value": "CPUUtilization"
                        },
                        "namespace": {
                          "constant_value": "AWS/ECS"
                        },
                        "period": {
                          "constant_value": 300
                        },
                        "statistic": {
                          "constant_value": "Average"
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "threshold": {
                          "constant_value": 25
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.autoscaling_config"
                        ]
                      }
                    },
                    {
                      "address": "aws_cloudwatch_metric_alarm.up",
                      "mode": "managed",
                      "type": "aws_cloudwatch_metric_alarm",
                      "name": "up",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "alarm_actions": {
                          "references": [
                            "aws_appautoscaling_policy.up[0]"
                          ]
                        },
                        "alarm_name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "comparison_operator": {
                          "constant_value": "GreaterThanThreshold"
                        },
                        "dimensions": {
                          "references": [
                            "aws_ecs_cluster.cluster",
                            "aws_ecs_service.service"
                          ]
                        },
                        "evaluation_periods": {
                          "constant_value": 5
                        },
                        "metric_name": {
                          "constant_value": "CPUUtilization"
                        },
                        "namespace": {
                          "constant_value": "AWS/ECS"
                        },
                        "period": {
                          "constant_value": 300
                        },
                        "statistic": {
                          "constant_value": "Average"
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "threshold": {
                          "constant_value": 75
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.autoscaling_config"
                        ]
                      }
                    },
                    {
                      "address": "aws_codedeploy_app.app",
                      "mode": "managed",
                      "type": "aws_codedeploy_app",
                      "name": "app",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "compute_platform": {
                          "constant_value": "ECS"
                        },
                        "name": {
                          "references": [
                            "var.app_name"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_codedeploy_deployment_group.deploymentgroup",
                      "mode": "managed",
                      "type": "aws_codedeploy_deployment_group",
                      "name": "deploymentgroup",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "app_name": {
                          "references": [
                            "aws_codedeploy_app.app"
                          ]
                        },
                        "auto_rollback_configuration": [
                          {
                            "enabled": {
                              "constant_value": true
                            },
                            "events": {
                              "constant_value": [
                                "DEPLOYMENT_FAILURE"
                              ]
                            }
                          }
                        ],
                        "blue_green_deployment_config": [
                          {
                            "deployment_ready_option": [
                              {
                                "action_on_timeout": {
                                  "constant_value": "CONTINUE_DEPLOYMENT"
                                }
                              }
                            ],
                            "terminate_blue_instances_on_deployment_success": [
                              {
                                "action": {
                                  "constant_value": "TERMINATE"
                                },
                                "termination_wait_time_in_minutes": {
                                  "references": [
                                    "var.codedeploy_termination_wait_time"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "deployment_config_name": {
                          "constant_value": "CodeDeployDefault.ECSAllAtOnce"
                        },
                        "deployment_group_name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "deployment_style": [
                          {
                            "deployment_option": {
                              "constant_value": "WITH_TRAFFIC_CONTROL"
                            },
                            "deployment_type": {
                              "constant_value": "BLUE_GREEN"
                            }
                          }
                        ],
                        "ecs_service": [
                          {
                            "cluster_name": {
                              "references": [
                                "aws_ecs_cluster.cluster"
                              ]
                            },
                            "service_name": {
                              "references": [
                                "aws_ecs_service.service"
                              ]
                            }
                          }
                        ],
                        "load_balancer_info": [
                          {
                            "target_group_pair_info": [
                              {
                                "prod_traffic_route": [
                                  {
                                    "listener_arns": {
                                      "references": [
                                        "aws_alb_listener.https"
                                      ]
                                    }
                                  }
                                ],
                                "target_group": [
                                  {
                                    "name": {
                                      "references": [
                                        "aws_alb_target_group.blue"
                                      ]
                                    }
                                  },
                                  {
                                    "name": {
                                      "references": [
                                        "aws_alb_target_group.green"
                                      ]
                                    }
                                  }
                                ],
                                "test_traffic_route": [
                                  {
                                    "listener_arns": {
                                      "references": [
                                        "var.codedeploy_test_listener_port",
                                        "aws_alb_listener.test_listener[0]"
                                      ]
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "service_role_arn": {
                          "references": [
                            "var.codedeploy_service_role_arn"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_ecs_cluster.cluster",
                      "mode": "managed",
                      "type": "aws_ecs_cluster",
                      "name": "cluster",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_ecs_service.service",
                      "mode": "managed",
                      "type": "aws_ecs_service",
                      "name": "service",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "cluster": {
                          "references": [
                            "aws_ecs_cluster.cluster"
                          ]
                        },
                        "deployment_controller": [
                          {
                            "type": {
                              "constant_value": "CODE_DEPLOY"
                            }
                          }
                        ],
                        "desired_count": {
                          "references": [
                            "var.autoscaling_config",
                            "var.autoscaling_config"
                          ]
                        },
                        "health_check_grace_period_seconds": {
                          "references": [
                            "var.health_check_grace_period"
                          ]
                        },
                        "launch_type": {
                          "constant_value": "FARGATE"
                        },
                        "load_balancer": [
                          {
                            "container_name": {
                              "references": [
                                "var.primary_container_definition"
                              ]
                            },
                            "container_port": {
                              "references": [
                                "var.container_port"
                              ]
                            },
                            "target_group_arn": {
                              "references": [
                                "aws_alb_target_group.blue"
                              ]
                            }
                          }
                        ],
                        "name": {
                          "references": [
                            "local.service_name"
                          ]
                        },
                        "network_configuration": [
                          {
                            "assign_public_ip": {
                              "constant_value": true
                            },
                            "security_groups": {
                              "references": [
                                "aws_security_group.fargate_service_sg",
                                "var.security_groups"
                              ]
                            },
                            "subnets": {
                              "references": [
                                "var.private_subnet_ids"
                              ]
                            }
                          }
                        ],
                        "platform_version": {
                          "constant_value": "1.4.0"
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "task_definition": {
                          "references": [
                            "aws_ecs_task_definition.task_def"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_ecs_task_definition.task_def",
                      "mode": "managed",
                      "type": "aws_ecs_task_definition",
                      "name": "task_def",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "container_definitions": {
                          "references": [
                            "local.container_definitions"
                          ]
                        },
                        "cpu": {
                          "references": [
                            "var.task_cpu"
                          ]
                        },
                        "execution_role_arn": {
                          "references": [
                            "aws_iam_role.task_execution_role"
                          ]
                        },
                        "family": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "memory": {
                          "references": [
                            "var.task_memory"
                          ]
                        },
                        "network_mode": {
                          "constant_value": "awsvpc"
                        },
                        "requires_compatibilities": {
                          "constant_value": [
                            "FARGATE"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "task_role_arn": {
                          "references": [
                            "aws_iam_role.task_role"
                          ]
                        }
                      },
                      "schema_version": 1
                    },
                    {
                      "address": "aws_iam_policy.secrets_access",
                      "mode": "managed",
                      "type": "aws_iam_policy",
                      "name": "secrets_access",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "policy": {
                          "references": [
                            "data.aws_iam_policy_document.secrets_access[0]"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.has_secrets"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role.task_execution_role",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "task_execution_role",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "assume_role_policy": {
                          "references": [
                            "data.aws_iam_policy_document.task_execution_policy"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "permissions_boundary": {
                          "references": [
                            "var.role_permissions_boundary_arn"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_iam_role.task_role",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "task_role",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "assume_role_policy": {
                          "references": [
                            "data.aws_iam_policy_document.task_policy"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "permissions_boundary": {
                          "references": [
                            "var.role_permissions_boundary_arn"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_iam_role_policy_attachment.secret_task_policy_attach",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "secret_task_policy_attach",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "policy_arn": {
                          "references": [
                            "aws_iam_policy.secrets_access[0]"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.task_role"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.has_secrets"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role_policy_attachment.secrets_policy_attach",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "secrets_policy_attach",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "policy_arn": {
                          "references": [
                            "aws_iam_policy.secrets_access[0]"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.task_execution_role"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.has_secrets"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role_policy_attachment.task_execution_policy_attach",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "task_execution_policy_attach",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "policy_arn": {
                          "constant_value": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.task_execution_role"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_iam_role_policy_attachment.task_policy_attach",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "task_policy_attach",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "policy_arn": {
                          "references": [
                            "var.task_policies",
                            "count.index"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.task_role"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.task_policies"
                        ]
                      }
                    },
                    {
                      "address": "aws_route53_record.a_record",
                      "mode": "managed",
                      "type": "aws_route53_record",
                      "name": "a_record",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "alias": [
                          {
                            "evaluate_target_health": {
                              "constant_value": true
                            },
                            "name": {
                              "references": [
                                "aws_alb.alb"
                              ]
                            },
                            "zone_id": {
                              "references": [
                                "aws_alb.alb"
                              ]
                            }
                          }
                        ],
                        "name": {
                          "references": [
                            "local.app_domain_url"
                          ]
                        },
                        "type": {
                          "constant_value": "A"
                        },
                        "zone_id": {
                          "references": [
                            "var.hosted_zone"
                          ]
                        }
                      },
                      "schema_version": 2
                    },
                    {
                      "address": "aws_route53_record.aaaa_record",
                      "mode": "managed",
                      "type": "aws_route53_record",
                      "name": "aaaa_record",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "alias": [
                          {
                            "evaluate_target_health": {
                              "constant_value": true
                            },
                            "name": {
                              "references": [
                                "aws_alb.alb"
                              ]
                            },
                            "zone_id": {
                              "references": [
                                "aws_alb.alb"
                              ]
                            }
                          }
                        ],
                        "name": {
                          "references": [
                            "local.app_domain_url"
                          ]
                        },
                        "type": {
                          "constant_value": "AAAA"
                        },
                        "zone_id": {
                          "references": [
                            "var.hosted_zone"
                          ]
                        }
                      },
                      "schema_version": 2
                    },
                    {
                      "address": "aws_security_group.alb-sg",
                      "mode": "managed",
                      "type": "aws_security_group",
                      "name": "alb-sg",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "local.alb_name"
                          ]
                        },
                        "name": {
                          "references": [
                            "local.alb_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "var.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1
                    },
                    {
                      "address": "aws_security_group.fargate_service_sg",
                      "mode": "managed",
                      "type": "aws_security_group",
                      "name": "fargate_service_sg",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "description": {
                          "constant_value": "Controls access to the Fargate Service"
                        },
                        "name": {
                          "references": [
                            "var.app_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "var.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1
                    },
                    {
                      "address": "local_file.appspec_json",
                      "mode": "managed",
                      "type": "local_file",
                      "name": "appspec_json",
                      "provider_config_key": "fargate:local",
                      "expressions": {
                        "content": {
                          "references": [
                            "aws_ecs_task_definition.task_def",
                            "var.primary_container_definition",
                            "var.container_port",
                            "local.hooks"
                          ]
                        },
                        "filename": {
                          "references": [
                            "path.cwd"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_caller_identity.current",
                      "mode": "data",
                      "type": "aws_caller_identity",
                      "name": "current",
                      "provider_config_key": "fargate:aws",
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_iam_policy_document.secrets_access",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "secrets_access",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "ssm:GetParameters",
                                "ssm:GetParameter",
                                "ssm:GetParemetersByPath"
                              ]
                            },
                            "effect": {
                              "constant_value": "Allow"
                            },
                            "resources": {
                              "references": [
                                "local.secrets_arns"
                              ]
                            }
                          }
                        ],
                        "version": {
                          "constant_value": "2012-10-17"
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.has_secrets"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_iam_policy_document.task_execution_policy",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "task_execution_policy",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "sts:AssumeRole"
                              ]
                            },
                            "effect": {
                              "constant_value": "Allow"
                            },
                            "principals": [
                              {
                                "identifiers": {
                                  "constant_value": [
                                    "ecs-tasks.amazonaws.com"
                                  ]
                                },
                                "type": {
                                  "constant_value": "Service"
                                }
                              }
                            ]
                          }
                        ],
                        "version": {
                          "constant_value": "2012-10-17"
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_iam_policy_document.task_policy",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "task_policy",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "sts:AssumeRole"
                              ]
                            },
                            "effect": {
                              "constant_value": "Allow"
                            },
                            "principals": [
                              {
                                "identifiers": {
                                  "constant_value": [
                                    "ecs-tasks.amazonaws.com"
                                  ]
                                },
                                "type": {
                                  "constant_value": "Service"
                                }
                              }
                            ]
                          }
                        ],
                        "version": {
                          "constant_value": "2012-10-17"
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_region.current",
                      "mode": "data",
                      "type": "aws_region",
                      "name": "current",
                      "provider_config_key": "fargate:aws",
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "app_name": {
                      "description": "Application name to name your Fargate API and other resources. Must be \u003c= 24 characters."
                    },
                    "autoscaling_config": {
                      "description": "Configuration for default autoscaling policies and alarms. Set to null if you want to set up your own autoscaling policies and alarms."
                    },
                    "codedeploy_lifecycle_hooks": {
                      "default": null,
                      "description": "Define Lambda Functions for CodeDeploy lifecycle event hooks. Or set this variable to null to not have any lifecycle hooks invoked. Defaults to null"
                    },
                    "codedeploy_service_role_arn": {
                      "description": "ARN of the IAM Role for the CodeDeploy to use to initiate new deployments. (usually the PowerBuilder Role)"
                    },
                    "codedeploy_termination_wait_time": {
                      "default": 15,
                      "description": "The number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment. Defaults to 15"
                    },
                    "codedeploy_test_listener_port": {
                      "default": null,
                      "description": "The port for a codedeploy test listener. If provided CodeDeploy will use this port for test traffic on the new replacement set during the blue-green deployment process before shifting production traffic to the replacement set. Defaults to null"
                    },
                    "container_port": {
                      "description": "The port the primary docker container is listening on"
                    },
                    "extra_container_definitions": {
                      "default": [],
                      "description": "A list of extra container definitions. Defaults to []"
                    },
                    "health_check_grace_period": {
                      "default": 0,
                      "description": "Health check grace period in seconds. Defaults to 0."
                    },
                    "health_check_healthy_threshold": {
                      "default": 3,
                      "description": "Health check healthy threshold; number of consecutive health checks required before considering target as healthy. Defaults to 3."
                    },
                    "health_check_interval": {
                      "default": 30,
                      "description": "Health check interval; amount of time, in seconds, between health checks of an individual target. Defaults to 30."
                    },
                    "health_check_path": {
                      "default": "/",
                      "description": "Health check path for the image. Defaults to \"/\"."
                    },
                    "health_check_timeout": {
                      "default": 5,
                      "description": "Health check timeout; amount of time, in seconds, during which no response means a failed health check. Defaults to 5."
                    },
                    "health_check_unhealthy_threshold": {
                      "default": 3,
                      "description": "Health check unhealthy threshold; number of consecutive failed health checks required before considering target as unhealthy. Defaults to 3."
                    },
                    "hosted_zone": {
                      "description": "Hosted Zone object to redirect to ALB. (Can pass in the aws_hosted_zone object). A and AAAA records created in this hosted zone."
                    },
                    "https_certificate_arn": {
                      "description": "ARN of the HTTPS certificate of the hosted zone/domain."
                    },
                    "log_retention_in_days": {
                      "default": 7,
                      "description": "CloudWatch log group retention in days. Defaults to 7."
                    },
                    "primary_container_definition": {
                      "description": "The primary container definition for your application. This one will be the only container that receives traffic from the ALB, so make sure the 'ports' field contains the same port as the 'image_port'"
                    },
                    "private_subnet_ids": {
                      "description": "List of subnet IDs for the fargate service."
                    },
                    "public_subnet_ids": {
                      "description": "List of subnet IDs for the ALB."
                    },
                    "role_permissions_boundary_arn": {
                      "description": "ARN of the IAM Role permissions boundary to place on each IAM role created."
                    },
                    "security_groups": {
                      "default": [],
                      "description": "List of extra security group IDs to attach to the fargate task."
                    },
                    "tags": {
                      "default": {},
                      "description": "A map of AWS Tags to attach to each resource created"
                    },
                    "target_group_deregistration_delay": {
                      "default": 60,
                      "description": "Deregistration delay in seconds for ALB target groups. Defaults to 60 seconds."
                    },
                    "task_cpu": {
                      "default": 256,
                      "description": "CPU for the task definition. Defaults to 256."
                    },
                    "task_memory": {
                      "default": 512,
                      "description": "Memory for the task definition. Defaults to 512."
                    },
                    "task_policies": {
                      "default": [],
                      "description": "List of IAM Policy ARNs to attach to the task execution policy."
                    },
                    "vpc_id": {
                      "description": "VPC ID to deploy ECS fargate service."
                    }
                  }
                }
              }
            },
            "variables": {
              "app_name": {},
              "autoscaling_config": {},
              "codedeploy_termination_wait_time": {},
              "db_allocated_storage": {},
              "db_instance_class": {},
              "env": {},
              "image_tag": {
                "description": "Docker image tag, tags need to be immutable. Usually a timestamp set by the CICD pipeline."
              }
            }
          }
        }
      },
      "variables": {
        "image_tag": {
          "description": "Docker image tag, tags need to be immutable. Usually a timestamp set by the CICD pipeline."
        }
      }
    }
  }
}
